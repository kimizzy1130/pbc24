import {
  mod,
  secp256k1
} from "./chunk-E74OGCGL.js";
import {
  SHA2,
  aptosClient,
  bytes,
  bytesToHex,
  concatBytes,
  createBase58check,
  createView,
  eventemitter3_default,
  hexToBytes,
  hmac,
  pbkdf2,
  require_nacl_fast,
  sha256,
  sha3_256,
  sha512,
  utf8ToBytes,
  wrapConstructor
} from "./chunk-PYKWRMZ7.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-FBPNHF54.mjs
var s = class extends Error {
  constructor(e3, i48) {
    super(e3);
    this.invalidReason = i48;
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-NL72WE3E.mjs
var l = ((e3) => (e3.TOO_SHORT = "too_short", e3.INVALID_LENGTH = "invalid_length", e3.INVALID_HEX_CHARS = "invalid_hex_chars", e3))(l || {});
var i = class n {
  constructor(t13) {
    this.data = t13;
  }
  toUint8Array() {
    return this.data;
  }
  toStringWithoutPrefix() {
    return bytesToHex(this.data);
  }
  toString() {
    return `0x${this.toStringWithoutPrefix()}`;
  }
  static fromString(t13) {
    let r23 = t13;
    if (r23.startsWith("0x") && (r23 = r23.slice(2)), r23.length === 0)
      throw new s("Hex string is too short, must be at least 1 char long, excluding the optional leading 0x.", "too_short");
    if (r23.length % 2 !== 0)
      throw new s("Hex string must be an even number of hex characters.", "invalid_length");
    try {
      return new n(hexToBytes(r23));
    } catch (e3) {
      throw new s(`Hex string contains invalid hex characters: ${e3 == null ? void 0 : e3.message}`, "invalid_hex_chars");
    }
  }
  static fromHexInput(t13) {
    return t13 instanceof Uint8Array ? new n(t13) : n.fromString(t13);
  }
  static isValid(t13) {
    try {
      return n.fromString(t13), { valid: true };
    } catch (r23) {
      return { valid: false, invalidReason: r23 == null ? void 0 : r23.invalidReason, invalidReasonMessage: r23 == null ? void 0 : r23.message };
    }
  }
  equals(t13) {
    return this.data.length !== t13.data.length ? false : this.data.every((r23, e3) => r23 === t13.data[e3]);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-56CNRT2K.mjs
var t = 255;
var n2 = 65535;
var U = 4294967295;
var _ = 18446744073709551615n;
var o = 340282366920938463463374607431768211455n;
var i2 = 115792089237316195423570985008687907853269984665640564039457584007913129639935n;

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-FVA2OPG4.mjs
var h = Object.defineProperty;
var i3 = Object.getOwnPropertyDescriptor;
var j = (g9, b9, d9, c14) => {
  for (var a13 = c14 > 1 ? void 0 : c14 ? i3(b9, d9) : b9, e3 = g9.length - 1, f13; e3 >= 0; e3--)
    (f13 = g9[e3]) && (a13 = (c14 ? f13(b9, d9, a13) : f13(a13)) || a13);
  return c14 && a13 && h(b9, d9, a13), a13;
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-N4RBQZ2B.mjs
var B = class {
  bcsToBytes() {
    let e3 = new n3();
    return this.serialize(e3), e3.toUint8Array();
  }
  bcsToHex() {
    let e3 = this.bcsToBytes();
    return i.fromHexInput(e3);
  }
};
var n3 = class {
  constructor(e3 = 64) {
    if (e3 <= 0)
      throw new Error("Length needs to be greater than 0");
    this.buffer = new ArrayBuffer(e3), this.offset = 0;
  }
  ensureBufferWillHandleSize(e3) {
    for (; this.buffer.byteLength < this.offset + e3; ) {
      let t13 = new ArrayBuffer(this.buffer.byteLength * 2);
      new Uint8Array(t13).set(new Uint8Array(this.buffer)), this.buffer = t13;
    }
  }
  appendToBuffer(e3) {
    this.ensureBufferWillHandleSize(e3.length), new Uint8Array(this.buffer, this.offset).set(e3), this.offset += e3.length;
  }
  serializeWithFunction(e3, t13, i48) {
    this.ensureBufferWillHandleSize(t13);
    let a13 = new DataView(this.buffer, this.offset);
    e3.apply(a13, [0, i48, true]), this.offset += t13;
  }
  serializeStr(e3) {
    let t13 = new TextEncoder();
    this.serializeBytes(t13.encode(e3));
  }
  serializeBytes(e3) {
    this.serializeU32AsUleb128(e3.length), this.appendToBuffer(e3);
  }
  serializeFixedBytes(e3) {
    this.appendToBuffer(e3);
  }
  serializeBool(e3) {
    A(e3);
    let t13 = e3 ? 1 : 0;
    this.appendToBuffer(new Uint8Array([t13]));
  }
  serializeU8(e3) {
    this.appendToBuffer(new Uint8Array([e3]));
  }
  serializeU16(e3) {
    this.serializeWithFunction(DataView.prototype.setUint16, 2, e3);
  }
  serializeU32(e3) {
    this.serializeWithFunction(DataView.prototype.setUint32, 4, e3);
  }
  serializeU64(e3) {
    let t13 = BigInt(e3) & BigInt(U), i48 = BigInt(e3) >> BigInt(32);
    this.serializeU32(Number(t13)), this.serializeU32(Number(i48));
  }
  serializeU128(e3) {
    let t13 = BigInt(e3) & _, i48 = BigInt(e3) >> BigInt(64);
    this.serializeU64(t13), this.serializeU64(i48);
  }
  serializeU256(e3) {
    let t13 = BigInt(e3) & o, i48 = BigInt(e3) >> BigInt(128);
    this.serializeU128(t13), this.serializeU128(i48);
  }
  serializeU32AsUleb128(e3) {
    let t13 = e3, i48 = [];
    for (; t13 >>> 7; )
      i48.push(t13 & 127 | 128), t13 >>>= 7;
    i48.push(t13), this.appendToBuffer(new Uint8Array(i48));
  }
  toUint8Array() {
    return new Uint8Array(this.buffer).slice(0, this.offset);
  }
  serialize(e3) {
    e3.serialize(this);
  }
  serializeVector(e3) {
    this.serializeU32AsUleb128(e3.length), e3.forEach((t13) => {
      t13.serialize(this);
    });
  }
};
j([o2(0, t)], n3.prototype, "serializeU8", 1), j([o2(0, n2)], n3.prototype, "serializeU16", 1), j([o2(0, U)], n3.prototype, "serializeU32", 1), j([o2(BigInt(0), _)], n3.prototype, "serializeU64", 1), j([o2(BigInt(0), o)], n3.prototype, "serializeU128", 1), j([o2(BigInt(0), i2)], n3.prototype, "serializeU256", 1), j([o2(0, U)], n3.prototype, "serializeU32AsUleb128", 1);
function A(r23) {
  if (typeof r23 != "boolean")
    throw new Error(`${r23} is not a boolean value`);
}
var g = (r23, e3, t13) => `${r23} is out of range: [${e3}, ${t13}]`;
function w(r23, e3, t13) {
  let i48 = BigInt(r23);
  if (i48 > BigInt(t13) || i48 < BigInt(e3))
    throw new Error(g(r23, e3, t13));
}
function o2(r23, e3) {
  return (t13, i48, a13) => {
    let p12 = a13.value;
    return a13.value = function(l12) {
      return w(l12, r23, e3), p12.apply(this, [l12]);
    }, a13;
  };
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-F7CR75CJ.mjs
var h2 = ((s12) => (s12.INCORRECT_NUMBER_OF_BYTES = "incorrect_number_of_bytes", s12.INVALID_HEX_CHARS = "invalid_hex_chars", s12.TOO_SHORT = "too_short", s12.TOO_LONG = "too_long", s12.LEADING_ZERO_X_REQUIRED = "leading_zero_x_required", s12.LONG_FORM_REQUIRED_UNLESS_SPECIAL = "long_form_required_unless_special", s12.INVALID_PADDING_ZEROES = "INVALID_PADDING_ZEROES", s12))(h2 || {});
var r = class r2 extends B {
  constructor(t13) {
    super();
    if (t13.length !== r2.LENGTH)
      throw new s("AccountAddress data should be exactly 32 bytes long", "incorrect_number_of_bytes");
    this.data = t13;
  }
  isSpecial() {
    return this.data.slice(0, this.data.length - 1).every((t13) => t13 === 0) && this.data[this.data.length - 1] < 16;
  }
  toString() {
    return `0x${this.toStringWithoutPrefix()}`;
  }
  toStringWithoutPrefix() {
    let t13 = bytesToHex(this.data);
    return this.isSpecial() && (t13 = t13[t13.length - 1]), t13;
  }
  toStringLong() {
    return `0x${this.toStringLongWithoutPrefix()}`;
  }
  toStringLongWithoutPrefix() {
    return bytesToHex(this.data);
  }
  toUint8Array() {
    return this.data;
  }
  serialize(t13) {
    t13.serializeFixedBytes(this.data);
  }
  serializeForEntryFunction(t13) {
    let e3 = this.bcsToBytes();
    t13.serializeBytes(e3);
  }
  serializeForScriptFunction(t13) {
    t13.serializeU32AsUleb128(3), t13.serialize(this);
  }
  static deserialize(t13) {
    let e3 = t13.deserializeFixedBytes(r2.LENGTH);
    return new r2(e3);
  }
  static fromStringStrict(t13) {
    if (!t13.startsWith("0x"))
      throw new s("Hex string must start with a leading 0x.", "leading_zero_x_required");
    let e3 = r2.fromString(t13);
    if (t13.length !== r2.LONG_STRING_LENGTH + 2)
      if (e3.isSpecial()) {
        if (t13.length !== 3)
          throw new s(`The given hex string ${t13} is a special address not in LONG form, it must be 0x0 to 0xf without padding zeroes.`, "INVALID_PADDING_ZEROES");
      } else
        throw new s(`The given hex string ${t13} is not a special address, it must be represented as 0x + 64 chars.`, "long_form_required_unless_special");
    return e3;
  }
  static fromString(t13) {
    let e3 = t13;
    if (t13.startsWith("0x") && (e3 = t13.slice(2)), e3.length === 0)
      throw new s("Hex string is too short, must be 1 to 64 chars long, excluding the leading 0x.", "too_short");
    if (e3.length > 64)
      throw new s("Hex string is too long, must be 1 to 64 chars long, excluding the leading 0x.", "too_long");
    let n24;
    try {
      n24 = hexToBytes(e3.padStart(64, "0"));
    } catch (d9) {
      throw new s(`Hex characters are invalid: ${d9 == null ? void 0 : d9.message}`, "invalid_hex_chars");
    }
    return new r2(n24);
  }
  static from(t13) {
    return t13 instanceof r2 ? t13 : t13 instanceof Uint8Array ? new r2(t13) : r2.fromString(t13);
  }
  static fromStrict(t13) {
    return t13 instanceof r2 ? t13 : t13 instanceof Uint8Array ? new r2(t13) : r2.fromStringStrict(t13);
  }
  static isValid(t13) {
    try {
      return t13.strict ? r2.fromStrict(t13.input) : r2.from(t13.input), { valid: true };
    } catch (e3) {
      return { valid: false, invalidReason: e3 == null ? void 0 : e3.invalidReason, invalidReasonMessage: e3 == null ? void 0 : e3.message };
    }
  }
  equals(t13) {
    return this.data.length !== t13.data.length ? false : this.data.every((e3, n24) => e3 === t13.data[n24]);
  }
};
r.LENGTH = 32, r.LONG_STRING_LENGTH = 64, r.ZERO = r.from("0x0"), r.ONE = r.from("0x1"), r.TWO = r.from("0x2"), r.THREE = r.from("0x3"), r.FOUR = r.from("0x4");
var c = r;

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-BQSE5HHW.mjs
var i4 = `
    fragment TokenActivitiesFields on token_activities_v2 {
  after_value
  before_value
  entry_function_id_str
  event_account_address
  event_index
  from_address
  is_fungible_v2
  property_version_v1
  to_address
  token_amount
  token_data_id
  token_standard
  transaction_timestamp
  transaction_version
  type
}
    `;
var a = `
    fragment AnsTokenFragment on current_aptos_names {
  domain
  expiration_timestamp
  registered_address
  subdomain
  token_standard
  is_primary
  owner_address
}
    `;
var s2 = `
    fragment CurrentTokenOwnershipFields on current_token_ownerships_v2 {
  token_standard
  token_properties_mutated_v1
  token_data_id
  table_type_v1
  storage_id
  property_version_v1
  owner_address
  last_transaction_version
  last_transaction_timestamp
  is_soulbound_v2
  is_fungible_v2
  amount
  current_token_data {
    collection_id
    description
    is_fungible_v2
    largest_property_version_v1
    last_transaction_timestamp
    last_transaction_version
    maximum
    supply
    token_data_id
    token_name
    token_properties
    token_standard
    token_uri
    current_collection {
      collection_id
      collection_name
      creator_address
      current_supply
      description
      last_transaction_timestamp
      last_transaction_version
      max_supply
      mutable_description
      mutable_uri
      table_handle_v1
      token_standard
      total_minted_v2
      uri
    }
  }
}
    `;
var _2 = `
    query getAccountCoinsCount($address: String) {
  current_fungible_asset_balances_aggregate(
    where: {owner_address: {_eq: $address}}
  ) {
    aggregate {
      count
    }
  }
}
    `;
var u = `
    query getAccountCoinsData($where_condition: current_fungible_asset_balances_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_fungible_asset_balances_order_by!]) {
  current_fungible_asset_balances(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    amount
    asset_type
    is_frozen
    is_primary
    last_transaction_timestamp
    last_transaction_version
    owner_address
    storage_id
    token_standard
    metadata {
      token_standard
      symbol
      supply_aggregator_table_key_v1
      supply_aggregator_table_handle_v1
      project_uri
      name
      last_transaction_version
      last_transaction_timestamp
      icon_uri
      decimals
      creator_address
      asset_type
    }
  }
}
    `;
var c2 = `
    query getAccountCollectionsWithOwnedTokens($where_condition: current_collection_ownership_v2_view_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_collection_ownership_v2_view_order_by!]) {
  current_collection_ownership_v2_view(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    current_collection {
      collection_id
      collection_name
      creator_address
      current_supply
      description
      last_transaction_timestamp
      last_transaction_version
      mutable_description
      max_supply
      mutable_uri
      table_handle_v1
      token_standard
      total_minted_v2
      uri
    }
    collection_id
    collection_name
    collection_uri
    creator_address
    distinct_tokens
    last_transaction_version
    owner_address
    single_token_uri
  }
}
    `;
var d = `
    query getAccountOwnedObjects($where_condition: current_objects_bool_exp, $offset: Int, $limit: Int, $order_by: [current_objects_order_by!]) {
  current_objects(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    allow_ungated_transfer
    state_key_hash
    owner_address
    object_address
    last_transaction_version
    last_guid_creation_num
    is_deleted
  }
}
    `;
var l2 = `
    query getAccountOwnedTokens($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {
  current_token_ownerships_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    ...CurrentTokenOwnershipFields
  }
}
    ${s2}`;
var y = `
    query getAccountOwnedTokensByTokenData($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {
  current_token_ownerships_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    ...CurrentTokenOwnershipFields
  }
}
    ${s2}`;
var p = `
    query getAccountOwnedTokensFromCollection($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {
  current_token_ownerships_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    ...CurrentTokenOwnershipFields
  }
}
    ${s2}`;
var m = `
    query getAccountTokensCount($where_condition: current_token_ownerships_v2_bool_exp, $offset: Int, $limit: Int) {
  current_token_ownerships_v2_aggregate(
    where: $where_condition
    offset: $offset
    limit: $limit
  ) {
    aggregate {
      count
    }
  }
}
    `;
var g2 = `
    query getAccountTransactionsCount($address: String) {
  account_transactions_aggregate(where: {account_address: {_eq: $address}}) {
    aggregate {
      count
    }
  }
}
    `;
var b = `
    query getChainTopUserTransactions($limit: Int) {
  user_transactions(limit: $limit, order_by: {version: desc}) {
    version
  }
}
    `;
var T = `
    query getCollectionData($where_condition: current_collections_v2_bool_exp!) {
  current_collections_v2(where: $where_condition) {
    collection_id
    collection_name
    creator_address
    current_supply
    description
    last_transaction_timestamp
    last_transaction_version
    max_supply
    mutable_description
    mutable_uri
    table_handle_v1
    token_standard
    total_minted_v2
    uri
  }
}
    `;
var k = `
    query getCurrentFungibleAssetBalances($where_condition: current_fungible_asset_balances_bool_exp, $offset: Int, $limit: Int) {
  current_fungible_asset_balances(
    where: $where_condition
    offset: $offset
    limit: $limit
  ) {
    amount
    asset_type
    is_frozen
    is_primary
    last_transaction_timestamp
    last_transaction_version
    owner_address
    storage_id
    token_standard
  }
}
    `;
var $ = `
    query getDelegatedStakingActivities($delegatorAddress: String, $poolAddress: String) {
  delegated_staking_activities(
    where: {delegator_address: {_eq: $delegatorAddress}, pool_address: {_eq: $poolAddress}}
  ) {
    amount
    delegator_address
    event_index
    event_type
    pool_address
    transaction_version
  }
}
    `;
var f = `
    query getEvents($where_condition: events_bool_exp, $offset: Int, $limit: Int, $order_by: [events_order_by!]) {
  events(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    account_address
    creation_number
    data
    event_index
    sequence_number
    transaction_block_height
    transaction_version
    type
    indexed_type
  }
}
    `;
var v = `
    query getFungibleAssetActivities($where_condition: fungible_asset_activities_bool_exp, $offset: Int, $limit: Int) {
  fungible_asset_activities(
    where: $where_condition
    offset: $offset
    limit: $limit
  ) {
    amount
    asset_type
    block_height
    entry_function_id_str
    event_index
    gas_fee_payer_address
    is_frozen
    is_gas_fee
    is_transaction_success
    owner_address
    storage_id
    storage_refund_amount
    token_standard
    transaction_timestamp
    transaction_version
    type
  }
}
    `;
var h3 = `
    query getFungibleAssetMetadata($where_condition: fungible_asset_metadata_bool_exp, $offset: Int, $limit: Int) {
  fungible_asset_metadata(where: $where_condition, offset: $offset, limit: $limit) {
    icon_uri
    project_uri
    supply_aggregator_table_handle_v1
    supply_aggregator_table_key_v1
    creator_address
    asset_type
    decimals
    last_transaction_timestamp
    last_transaction_version
    name
    symbol
    token_standard
  }
}
    `;
var A2 = `
    query getNames($offset: Int, $limit: Int, $where_condition: current_aptos_names_bool_exp, $order_by: [current_aptos_names_order_by!]) {
  current_aptos_names(
    limit: $limit
    where: $where_condition
    order_by: $order_by
    offset: $offset
  ) {
    ...AnsTokenFragment
  }
}
    ${a}`;
var w2 = `
    query getNumberOfDelegators($where_condition: num_active_delegator_per_pool_bool_exp, $order_by: [num_active_delegator_per_pool_order_by!]) {
  num_active_delegator_per_pool(where: $where_condition, order_by: $order_by) {
    num_active_delegator
    pool_address
  }
}
    `;
var G = `
    query getProcessorStatus($where_condition: processor_status_bool_exp) {
  processor_status(where: $where_condition) {
    last_success_version
    processor
    last_updated
  }
}
    `;
var C = `
    query getTokenActivity($where_condition: token_activities_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [token_activities_v2_order_by!]) {
  token_activities_v2(
    where: $where_condition
    order_by: $order_by
    offset: $offset
    limit: $limit
  ) {
    ...TokenActivitiesFields
  }
}
    ${i4}`;
var q = `
    query getCurrentTokenOwnership($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {
  current_token_ownerships_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    ...CurrentTokenOwnershipFields
  }
}
    ${s2}`;
var Q = `
    query getTokenData($where_condition: current_token_datas_v2_bool_exp, $offset: Int, $limit: Int, $order_by: [current_token_datas_v2_order_by!]) {
  current_token_datas_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    collection_id
    description
    is_fungible_v2
    largest_property_version_v1
    last_transaction_timestamp
    last_transaction_version
    maximum
    supply
    token_data_id
    token_name
    token_properties
    token_standard
    token_uri
    current_collection {
      collection_id
      collection_name
      creator_address
      current_supply
      description
      last_transaction_timestamp
      last_transaction_version
      max_supply
      mutable_description
      mutable_uri
      table_handle_v1
      token_standard
      total_minted_v2
      uri
    }
  }
}
    `;

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-6FBKUTGF.mjs
var s3 = class extends Error {
  constructor(e3, t13, a13) {
    super(a13);
    this.name = "AptosApiError", this.url = t13.url, this.status = t13.status, this.statusText = t13.statusText, this.data = t13.data, this.request = e3;
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-3UYBNX3P.mjs
var o3 = "1.6.0";

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-T5IFXLOP.mjs
var l3 = { 400: "Bad Request", 401: "Unauthorized", 403: "Forbidden", 404: "Not Found", 429: "Too Many Requests", 500: "Internal Server Error", 502: "Bad Gateway", 503: "Service Unavailable" };
async function c3(o13, a13) {
  let { url: r23, method: i48, body: u10, contentType: s12, params: e3, overrides: t13 } = o13, n24 = { ...t13 == null ? void 0 : t13.HEADERS, "x-aptos-client": `aptos-typescript-sdk/${o3}`, "content-type": s12 ?? "application/json" };
  return (t13 == null ? void 0 : t13.AUTH_TOKEN) && r23.includes("faucet") && (n24.Authorization = `Bearer ${t13 == null ? void 0 : t13.AUTH_TOKEN}`), (t13 == null ? void 0 : t13.API_KEY) && !r23.includes("faucet") && (n24.Authorization = `Bearer ${t13 == null ? void 0 : t13.API_KEY}`), a13.provider({ url: r23, method: i48, body: u10, params: e3, headers: n24, overrides: t13 });
}
async function T2(o13, a13) {
  let { url: r23, path: i48 } = o13, u10 = i48 ? `${r23}/${i48}` : r23, s12 = await c3({ ...o13, url: u10 }, a13.client), e3 = { status: s12.status, statusText: s12.statusText, data: s12.data, headers: s12.headers, config: s12.config, request: s12.request, url: u10 };
  if (a13.isIndexerRequest(r23)) {
    let n24 = e3.data;
    if (n24.errors)
      throw new s3(o13, e3, `Indexer error: ${n24.errors[0].message}` ?? `Indexer unhandled Error ${s12.status} : ${s12.statusText}`);
    e3.data = n24.data;
  }
  if (e3.status >= 200 && e3.status < 300)
    return e3;
  let t13;
  throw e3 && e3.data && "message" in e3.data && "error_code" in e3.data ? t13 = JSON.stringify(e3.data) : e3.status in l3 ? t13 = l3[e3.status] : t13 = `Unhandled Error ${e3.status} : ${e3.statusText}`, new s3(o13, e3, `${a13.isFullnodeRequest(r23) ? "Fullnode" : "Faucet"} error: ${t13}`);
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-IKCBGNRD.mjs
async function p2(e3) {
  let { aptosConfig: t13, overrides: s12, params: n24, contentType: o13, acceptType: i48, path: a13, originMethod: u10, type: R4 } = e3, d9 = t13.getRequestUrl(R4);
  return T2({ url: d9, method: "GET", originMethod: u10, path: a13, contentType: o13 == null ? void 0 : o13.valueOf(), acceptType: i48 == null ? void 0 : i48.valueOf(), params: n24, overrides: { ...t13.clientConfig, ...s12 } }, t13);
}
async function g3(e3) {
  return p2({ ...e3, type: 0 });
}
async function f2(e3) {
  let t13 = [], s12, n24 = e3.params;
  do {
    let o13 = await p2({ type: 0, aptosConfig: e3.aptosConfig, originMethod: e3.originMethod, path: e3.path, params: n24, overrides: e3.overrides });
    s12 = o13.headers["x-aptos-cursor"], delete o13.headers, t13.push(...o13.data), n24.start = s12;
  } while (s12 != null);
  return t13;
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-YE3DZD6T.mjs
async function s4(e3) {
  let { type: p12, originMethod: n24, path: i48, body: r23, acceptType: R4, contentType: y10, params: u10, aptosConfig: t13, overrides: m12 } = e3, c14 = t13.getRequestUrl(p12);
  return T2({ url: c14, method: "POST", originMethod: n24, path: i48, body: r23, contentType: y10 == null ? void 0 : y10.valueOf(), acceptType: R4 == null ? void 0 : R4.valueOf(), params: u10, overrides: { ...t13.clientConfig, ...m12 } }, t13);
}
async function A3(e3) {
  return s4({ ...e3, type: 0 });
}
async function f3(e3) {
  return s4({ ...e3, type: 1 });
}
async function x(e3) {
  return s4({ ...e3, type: 2 });
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-DRF6AMEZ.mjs
async function l4(o13) {
  let { aptosConfig: e3 } = o13, { data: t13 } = await g3({ aptosConfig: e3, originMethod: "getLedgerInfo", path: "" });
  return t13;
}
async function h4(o13) {
  let { aptosConfig: e3, ledgerVersion: t13, options: s12 } = o13, { data: r23 } = await g3({ aptosConfig: e3, originMethod: "getBlockByVersion", path: `blocks/by_version/${t13}`, params: { with_transactions: s12 == null ? void 0 : s12.withTransactions } });
  return r23;
}
async function m2(o13) {
  let { aptosConfig: e3, blockHeight: t13, options: s12 } = o13, { data: r23 } = await g3({ aptosConfig: e3, originMethod: "getBlockByHeight", path: `blocks/by_height/${t13}`, params: { with_transactions: s12 == null ? void 0 : s12.withTransactions } });
  return r23;
}
async function C2(o13) {
  let { aptosConfig: e3, handle: t13, data: s12, options: r23 } = o13;
  return (await A3({ aptosConfig: e3, originMethod: "getTableItem", path: `tables/${t13}/item`, params: { ledger_version: r23 == null ? void 0 : r23.ledgerVersion }, body: s12 })).data;
}
async function T3(o13) {
  let { aptosConfig: e3, payload: t13, options: s12 } = o13, { data: r23 } = await A3({ aptosConfig: e3, originMethod: "view", path: "view", params: { ledger_version: s12 == null ? void 0 : s12.ledgerVersion }, body: { function: t13.function, type_arguments: t13.typeArguments ?? [], arguments: t13.functionArguments ?? [] } });
  return r23;
}
async function q2(o13) {
  let { aptosConfig: e3, limit: t13 } = o13;
  return (await p3({ aptosConfig: e3, query: { query: b, variables: { limit: t13 } }, originMethod: "getChainTopUserTransactions" })).user_transactions;
}
async function p3(o13) {
  let { aptosConfig: e3, query: t13, originMethod: s12 } = o13, { data: r23 } = await f3({ aptosConfig: e3, originMethod: s12 ?? "queryIndexer", path: "", body: t13, overrides: { WITH_CREDENTIALS: false } });
  return r23;
}
async function f4(o13) {
  let { aptosConfig: e3 } = o13;
  return (await p3({ aptosConfig: e3, query: { query: G }, originMethod: "getProcessorStatuses" })).processor_status;
}
async function w3(o13) {
  let e3 = await f4({ aptosConfig: o13.aptosConfig });
  return BigInt(e3[0].last_success_version);
}
async function A4(o13) {
  let { aptosConfig: e3, processorType: t13 } = o13, s12 = { processor: { _eq: t13.valueOf() } };
  return (await p3({ aptosConfig: e3, query: { query: G, variables: { where_condition: s12 } }, originMethod: "getProcessorStatus" })).processor_status[0];
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-XOBXX273.mjs
async function m3(e3) {
  let { aptosConfig: t13, poolAddress: o13 } = e3, r23 = c.from(o13).toStringLong(), i48 = await p3({ aptosConfig: t13, query: { query: w2, variables: { where_condition: { pool_address: { _eq: r23 } } } } });
  return i48.num_active_delegator_per_pool[0] ? i48.num_active_delegator_per_pool[0].num_active_delegator : 0;
}
async function f5(e3) {
  let { aptosConfig: t13, options: o13 } = e3, r23 = { query: w2, variables: { order_by: o13 == null ? void 0 : o13.orderBy } };
  return (await p3({ aptosConfig: t13, query: r23 })).num_active_delegator_per_pool;
}
async function A5(e3) {
  let { aptosConfig: t13, delegatorAddress: o13, poolAddress: r23 } = e3, a13 = { query: $, variables: { delegatorAddress: c.from(o13).toStringLong(), poolAddress: c.from(r23).toStringLong() } };
  return (await p3({ aptosConfig: t13, query: a13 })).delegated_staking_activities;
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-AH44UPM4.mjs
var n4 = /* @__PURE__ */ new Map();
function m4(r23, e3, t13) {
  return async (...s12) => {
    if (n4.has(e3)) {
      let { value: i48, timestamp: u10 } = n4.get(e3);
      if (t13 === void 0 || Date.now() - u10 <= t13)
        return i48;
    }
    let a13 = await r23(...s12);
    return n4.set(e3, { value: a13, timestamp: Date.now() }), a13;
  };
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-HHJBCGAQ.mjs
var S = ((E6) => (E6[E6.FULLNODE = 0] = "FULLNODE", E6[E6.INDEXER = 1] = "INDEXER", E6[E6.FAUCET = 2] = "FAUCET", E6))(S || {});
var n5 = "devnet";
var o4 = 2e5;
var N = 20;
var T4 = 20;
var A6 = "0x1::aptos_coin::AptosCoin";
var a2 = "APTOS::RawTransaction";
var r3 = "APTOS::RawTransactionWithData";
var t2 = ((_5) => (_5.ACCOUNT_TRANSACTION_PROCESSOR = "account_transactions_processor", _5.DEFAULT = "default_processor", _5.EVENTS_PROCESSOR = "events_processor", _5.FUNGIBLE_ASSET_PROCESSOR = "fungible_asset_processor", _5.STAKE_PROCESSOR = "stake_processor", _5.TOKEN_V2_PROCESSOR = "token_v2_processor", _5.USER_TRANSACTION_PROCESSOR = "user_transaction_processor", _5))(t2 || {});

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-3JPVQHOR.mjs
async function r4(e3) {
  return new Promise((n24) => {
    setTimeout(n24, e3);
  });
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-A2QH4A6D.mjs
async function F(o13) {
  let { aptosConfig: n24, options: t13 } = o13;
  return f2({ aptosConfig: n24, originMethod: "getTransactions", path: "transactions", params: { start: t13 == null ? void 0 : t13.offset, limit: t13 == null ? void 0 : t13.limit } });
}
async function L(o13) {
  let { aptosConfig: n24 } = o13;
  return m4(async () => {
    let { data: t13 } = await g3({ aptosConfig: n24, originMethod: "getGasPriceEstimation", path: "estimate_gas_price" });
    return t13;
  }, `gas-price-${n24.network}`, 1e3 * 60 * 5)();
}
async function v2(o13) {
  let { aptosConfig: n24, ledgerVersion: t13 } = o13, { data: s12 } = await g3({ aptosConfig: n24, originMethod: "getTransactionByVersion", path: `transactions/by_version/${t13}` });
  return s12;
}
async function x2(o13) {
  let { aptosConfig: n24, transactionHash: t13 } = o13, { data: s12 } = await g3({ aptosConfig: n24, path: `transactions/by_hash/${t13}`, originMethod: "getTransactionByHash" });
  return s12;
}
async function N2(o13) {
  let { aptosConfig: n24, transactionHash: t13 } = o13;
  try {
    return (await x2({ aptosConfig: n24, transactionHash: t13 })).type === "pending_transaction";
  } catch (s12) {
    if ((s12 == null ? void 0 : s12.status) === 404)
      return true;
    throw s12;
  }
}
async function G2(o13) {
  let { aptosConfig: n24, transactionHash: t13, options: s12 } = o13, r23 = (s12 == null ? void 0 : s12.timeoutSecs) ?? T4, f13 = (s12 == null ? void 0 : s12.checkSuccess) ?? true, i48 = true, u10 = 0, e3, g9, m12 = 200, P6 = 1.5;
  for (; i48 && !(u10 >= r23); ) {
    try {
      if (e3 = await x2({ aptosConfig: n24, transactionHash: t13 }), i48 = e3.type === "pending_transaction", !i48)
        break;
    } catch (a13) {
      if (!(a13 instanceof s3) || (g9 = a13, a13.status !== 404 && a13.status >= 400 && a13.status < 500))
        throw a13;
    }
    await r4(m12), u10 += m12 / 1e3, m12 *= P6;
  }
  if (e3 === void 0)
    throw g9 || new p4(`Fetching transaction ${t13} failed and timed out after ${r23} seconds`, e3);
  if (e3.type === "pending_transaction")
    throw new p4(`Transaction ${t13} timed out in pending state after ${r23} seconds`, e3);
  if (!f13)
    return e3;
  if (!e3.success)
    throw new T5(`Transaction ${t13} failed with an error: ${e3.vm_status}`, e3);
  return e3;
}
async function D(o13) {
  let { aptosConfig: n24, processorType: t13 } = o13, s12 = BigInt(o13.minimumLedgerVersion), r23 = 3e3, f13 = (/* @__PURE__ */ new Date()).getTime(), i48 = BigInt(-1);
  for (; i48 < s12; ) {
    if ((/* @__PURE__ */ new Date()).getTime() - f13 > r23)
      throw new Error("waitForLastSuccessIndexerVersionSync timeout");
    if (t13 === void 0 ? i48 = await w3({ aptosConfig: n24 }) : i48 = (await A4({ aptosConfig: n24, processorType: t13 })).last_success_version, i48 >= s12)
      break;
    await r4(200);
  }
}
var p4 = class extends Error {
  constructor(t13, s12) {
    super(t13);
    this.lastSubmittedTransaction = s12;
  }
};
var T5 = class extends Error {
  constructor(t13, s12) {
    super(t13);
    this.transaction = s12;
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-7JTOGYO7.mjs
async function i5(o13) {
  o13.minimumLedgerVersion !== void 0 && await D({ aptosConfig: o13.config, minimumLedgerVersion: o13.minimumLedgerVersion, processorType: o13.processorType });
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-RIL4SHXC.mjs
var t3 = class {
  constructor(e3) {
    this.config = e3;
  }
  async getNumberOfDelegators(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "stake_processor" }), m3({ aptosConfig: this.config, ...e3 });
  }
  async getNumberOfDelegatorsForAllPools(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "stake_processor" }), f5({ aptosConfig: this.config, ...e3 });
  }
  async getDelegatedStakingActivities(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "stake_processor" }), A5({ aptosConfig: this.config, ...e3 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-IHCIKE42.mjs
var r5 = class t4 extends B {
  constructor(i48) {
    super();
    this.identifier = i48;
  }
  serialize(i48) {
    i48.serializeStr(this.identifier);
  }
  static deserialize(i48) {
    let s12 = i48.deserializeStr();
    return new t4(s12);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-PJNPLRPR.mjs
var t5 = class extends B {
  static deserialize(e3) {
    let r23 = e3.deserializeUleb128AsU32();
    switch (r23) {
      case 0:
        return c4.load(e3);
      case 1:
        return u2.load(e3);
      case 2:
        return p5.load(e3);
      case 3:
        return z.load(e3);
      case 4:
        return S2.load(e3);
      case 5:
        return U2.load(e3);
      case 6:
        return y2.load(e3);
      case 7:
        return b2.load(e3);
      case 8:
        return d2.load(e3);
      case 9:
        return g4.load(e3);
      case 10:
        return T6.load(e3);
      case 255:
        return h5.load(e3);
      default:
        throw new Error(`Unknown variant index for TypeTag: ${r23}`);
    }
  }
  isBool() {
    return this instanceof c4;
  }
  isAddress() {
    return this instanceof S2;
  }
  isGeneric() {
    return this instanceof h5;
  }
  isSigner() {
    return this instanceof U2;
  }
  isVector() {
    return this instanceof y2;
  }
  isStruct() {
    return this instanceof b2;
  }
  isU8() {
    return this instanceof u2;
  }
  isU16() {
    return this instanceof d2;
  }
  isU32() {
    return this instanceof g4;
  }
  isU64() {
    return this instanceof p5;
  }
  isU128() {
    return this instanceof z;
  }
  isU256() {
    return this instanceof T6;
  }
};
var c4 = class i6 extends t5 {
  toString() {
    return "bool";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(0);
  }
  static load(e3) {
    return new i6();
  }
};
var u2 = class i7 extends t5 {
  toString() {
    return "u8";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(1);
  }
  static load(e3) {
    return new i7();
  }
};
var d2 = class i8 extends t5 {
  toString() {
    return "u16";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(8);
  }
  static load(e3) {
    return new i8();
  }
};
var g4 = class i9 extends t5 {
  toString() {
    return "u32";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(9);
  }
  static load(e3) {
    return new i9();
  }
};
var p5 = class i10 extends t5 {
  toString() {
    return "u64";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(2);
  }
  static load(e3) {
    return new i10();
  }
};
var z = class i11 extends t5 {
  toString() {
    return "u128";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(3);
  }
  static load(e3) {
    return new i11();
  }
};
var T6 = class i12 extends t5 {
  toString() {
    return "u256";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(10);
  }
  static load(e3) {
    return new i12();
  }
};
var S2 = class i13 extends t5 {
  toString() {
    return "address";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(4);
  }
  static load(e3) {
    return new i13();
  }
};
var U2 = class i14 extends t5 {
  toString() {
    return "signer";
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(5);
  }
  static load(e3) {
    return new i14();
  }
};
var f6 = class i15 extends t5 {
  constructor(r23) {
    super();
    this.value = r23;
  }
  toString() {
    return `&${this.value.toString()}`;
  }
  serialize(r23) {
    r23.serializeU32AsUleb128(254);
  }
  static load(r23) {
    let s12 = t5.deserialize(r23);
    return new i15(s12);
  }
};
var h5 = class i16 extends t5 {
  constructor(r23) {
    super();
    this.value = r23;
    if (r23 < 0)
      throw new Error("Generic type parameter index cannot be negative");
  }
  toString() {
    return `T${this.value}`;
  }
  serialize(r23) {
    r23.serializeU32AsUleb128(255), r23.serializeU32(this.value);
  }
  static load(r23) {
    let s12 = r23.deserializeU32();
    return new i16(s12);
  }
};
var y2 = class i17 extends t5 {
  constructor(r23) {
    super();
    this.value = r23;
  }
  toString() {
    return `vector<${this.value.toString()}>`;
  }
  static u8() {
    return new i17(new u2());
  }
  serialize(r23) {
    r23.serializeU32AsUleb128(6), this.value.serialize(r23);
  }
  static load(r23) {
    let s12 = t5.deserialize(r23);
    return new i17(s12);
  }
};
var b2 = class i18 extends t5 {
  constructor(r23) {
    super();
    this.value = r23;
  }
  toString() {
    let r23 = "";
    return this.value.typeArgs.length > 0 && (r23 = `<${this.value.typeArgs.map((s12) => s12.toString()).join(", ")}>`), `${this.value.address.toString()}::${this.value.moduleName.identifier}::${this.value.name.identifier}${r23}`;
  }
  serialize(r23) {
    r23.serializeU32AsUleb128(7), this.value.serialize(r23);
  }
  static load(r23) {
    let s12 = o5.deserialize(r23);
    return new i18(s12);
  }
  isTypeTag(r23, s12, l12) {
    return this.value.moduleName.identifier === s12 && this.value.name.identifier === l12 && this.value.address.equals(r23);
  }
  isString() {
    return this.isTypeTag(c.ONE, "string", "String");
  }
  isOption() {
    return this.isTypeTag(c.ONE, "option", "Option");
  }
  isObject() {
    return this.isTypeTag(c.ONE, "object", "Object");
  }
};
var o5 = class i19 extends B {
  constructor(r23, s12, l12, v9) {
    super();
    this.address = r23, this.moduleName = s12, this.name = l12, this.typeArgs = v9;
  }
  serialize(r23) {
    r23.serialize(this.address), r23.serialize(this.moduleName), r23.serialize(this.name), r23.serializeVector(this.typeArgs);
  }
  static deserialize(r23) {
    let s12 = c.deserialize(r23), l12 = r5.deserialize(r23), v9 = r5.deserialize(r23), A13 = r23.deserializeVector(t5);
    return new i19(s12, l12, v9, A13);
  }
};
function E() {
  return new o5(c.ONE, new r5("aptos_coin"), new r5("AptosCoin"), []);
}
function V() {
  return new o5(c.ONE, new r5("string"), new r5("String"), []);
}
function j2(i48) {
  return new o5(c.ONE, new r5("option"), new r5("Option"), [i48]);
}
function G3(i48) {
  return new o5(c.ONE, new r5("object"), new r5("Object"), [i48]);
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-OVSV4Y32.mjs
function N3(e3) {
  return !!e3.match(/^[_a-zA-Z0-9]+$/);
}
function V2(e3) {
  return !!e3.match(/\s/);
}
function $2(e3) {
  return !!e3.match(/^T[0-9]+$/);
}
function F2(e3, n24) {
  let i48 = n24;
  for (; i48 < e3.length; i48 += 1) {
    let c14 = e3[i48];
    if (!V2(c14))
      break;
  }
  return i48;
}
var S3 = ((t13) => (t13.InvalidTypeTag = "unknown type", t13.UnexpectedGenericType = "unexpected generic type", t13.UnexpectedTypeArgumentClose = "unexpected '>'", t13.UnexpectedWhitespaceCharacter = "unexpected whitespace character", t13.UnexpectedComma = "unexpected ','", t13.TypeArgumentCountMismatch = "type argument count doesn't match expected amount", t13.MissingTypeArgumentClose = "no matching '>' for '<'", t13.UnexpectedPrimitiveTypeArguments = "primitive types not expected to have type arguments", t13.UnexpectedVectorTypeArgumentCount = "vector type expected to have exactly one type argument", t13.UnexpectedStructFormat = "unexpected struct format, must be of the form 0xaddress::module_name::struct_name", t13.InvalidModuleNameCharacter = "module name must only contain alphanumeric or '_' characters", t13.InvalidStructNameCharacter = "struct name must only contain alphanumeric or '_' characters", t13))(S3 || {});
var r6 = class extends Error {
  constructor(n24, i48) {
    super(`Failed to parse typeTag '${n24}', ${i48}`);
  }
};
function Z(e3, n24) {
  let i48 = (n24 == null ? void 0 : n24.allowGenerics) ?? false, c14 = [], o13 = [], p12 = [], T10 = 0, a13 = "", u10 = 1;
  for (; T10 < e3.length; ) {
    let g9 = e3[T10];
    if (g9 === "<")
      c14.push({ savedExpectedTypes: u10, savedStr: a13, savedTypes: p12 }), a13 = "", p12 = [], u10 = 1;
    else if (g9 === ">") {
      if (a13 !== "") {
        let _5 = m5(a13, o13, i48);
        p12.push(_5);
      }
      let s12 = c14.pop();
      if (s12 === void 0)
        throw new r6(e3, "unexpected '>'");
      if (u10 !== p12.length)
        throw new r6(e3, "type argument count doesn't match expected amount");
      let { savedStr: h14, savedTypes: t13, savedExpectedTypes: W5 } = s12;
      o13 = p12, p12 = t13, a13 = h14, u10 = W5;
    } else if (g9 === ",") {
      if (a13.length !== 0) {
        let s12 = m5(a13, o13, i48);
        o13 = [], p12.push(s12), a13 = "", u10 += 1;
      }
    } else if (V2(g9)) {
      let s12 = false;
      if (a13.length !== 0) {
        let t13 = m5(a13, o13, i48);
        o13 = [], p12.push(t13), a13 = "", s12 = true;
      }
      T10 = F2(e3, T10);
      let h14 = e3[T10];
      if (T10 < e3.length && s12 && h14 !== "," && h14 !== ">")
        throw new r6(e3, "unexpected whitespace character");
      continue;
    } else
      a13 += g9;
    T10 += 1;
  }
  if (c14.length > 0)
    throw new r6(e3, "no matching '>' for '<'");
  switch (p12.length) {
    case 0:
      return m5(a13, o13, i48);
    case 1:
      if (a13 === "")
        return p12[0];
      throw new r6(e3, "unexpected ','");
    default:
      throw new r6(e3, "unexpected whitespace character");
  }
}
function m5(e3, n24, i48) {
  switch (e3) {
    case "&signer":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new f6(new U2());
    case "signer":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new U2();
    case "bool":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new c4();
    case "address":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new S2();
    case "u8":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new u2();
    case "u16":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new d2();
    case "u32":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new g4();
    case "u64":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new p5();
    case "u128":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new z();
    case "u256":
      if (n24.length > 0)
        throw new r6(e3, "primitive types not expected to have type arguments");
      return new T6();
    case "vector":
      if (n24.length !== 1)
        throw new r6(e3, "vector type expected to have exactly one type argument");
      return new y2(n24[0]);
    default:
      if ($2(e3)) {
        if (i48)
          return new h5(Number(e3.split("T")[1]));
        throw new r6(e3, "unexpected generic type");
      }
      if (!e3.match(/.*:.*/))
        throw new r6(e3, "unknown type");
      let c14 = e3.split("::");
      if (c14.length !== 3)
        throw new r6(e3, "unexpected struct format, must be of the form 0xaddress::module_name::struct_name");
      if (!N3(c14[1]))
        throw new r6(e3, "module name must only contain alphanumeric or '_' characters");
      if (!N3(c14[2]))
        throw new r6(e3, "struct name must only contain alphanumeric or '_' characters");
      return new b2(new o5(c.fromString(c14[0]), new r5(c14[1]), new r5(c14[2]), n24));
  }
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-VRSUCKJA.mjs
var U3 = class i20 extends B {
  constructor(e3) {
    super();
    A(e3), this.value = e3;
  }
  serialize(e3) {
    e3.serializeBool(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    e3.serializeU32AsUleb128(5), e3.serialize(this);
  }
  static deserialize(e3) {
    return new i20(e3.deserializeBool());
  }
};
var p6 = class i21 extends B {
  constructor(e3) {
    super();
    w(e3, 0, t), this.value = e3;
  }
  serialize(e3) {
    e3.serializeU8(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    e3.serializeU32AsUleb128(0), e3.serialize(this);
  }
  static deserialize(e3) {
    return new i21(e3.deserializeU8());
  }
};
var b3 = class i22 extends B {
  constructor(e3) {
    super();
    w(e3, 0, n2), this.value = e3;
  }
  serialize(e3) {
    e3.serializeU16(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    e3.serializeU32AsUleb128(6), e3.serialize(this);
  }
  static deserialize(e3) {
    return new i22(e3.deserializeU16());
  }
};
var y3 = class i23 extends B {
  constructor(e3) {
    super();
    w(e3, 0, U), this.value = e3;
  }
  serialize(e3) {
    e3.serializeU32(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    e3.serializeU32AsUleb128(7), e3.serialize(this);
  }
  static deserialize(e3) {
    return new i23(e3.deserializeU32());
  }
};
var m6 = class i24 extends B {
  constructor(e3) {
    super();
    w(e3, BigInt(0), _), this.value = BigInt(e3);
  }
  serialize(e3) {
    e3.serializeU64(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    e3.serializeU32AsUleb128(1), e3.serialize(this);
  }
  static deserialize(e3) {
    return new i24(e3.deserializeU64());
  }
};
var B2 = class i25 extends B {
  constructor(e3) {
    super();
    w(e3, BigInt(0), o), this.value = BigInt(e3);
  }
  serialize(e3) {
    e3.serializeU128(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    e3.serializeU32AsUleb128(2), e3.serialize(this);
  }
  static deserialize(e3) {
    return new i25(e3.deserializeU128());
  }
};
var v3 = class i26 extends B {
  constructor(e3) {
    super();
    w(e3, BigInt(0), i2), this.value = BigInt(e3);
  }
  serialize(e3) {
    e3.serializeU256(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    e3.serializeU32AsUleb128(8), e3.serialize(this);
  }
  static deserialize(e3) {
    return new i26(e3.deserializeU256());
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-F7MOQC7Z.mjs
var t6 = class n6 extends B {
  constructor(e3) {
    super();
    this.values = e3;
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    if (!(this.values[0] instanceof p6) && this.values[0] !== void 0)
      throw new Error("Script function arguments only accept u8 vectors");
    e3.serializeU32AsUleb128(4), e3.serialize(this);
  }
  static U8(e3) {
    let r23;
    if (Array.isArray(e3) && typeof e3[0] == "number")
      r23 = e3;
    else if (typeof e3 == "string") {
      let i48 = i.fromHexInput(e3);
      r23 = Array.from(i48.toUint8Array());
    } else if (e3 instanceof Uint8Array)
      r23 = Array.from(e3);
    else
      throw new Error("Invalid input type");
    return new n6(r23.map((i48) => new p6(i48)));
  }
  static U16(e3) {
    return new n6(e3.map((r23) => new b3(r23)));
  }
  static U32(e3) {
    return new n6(e3.map((r23) => new y3(r23)));
  }
  static U64(e3) {
    return new n6(e3.map((r23) => new m6(r23)));
  }
  static U128(e3) {
    return new n6(e3.map((r23) => new B2(r23)));
  }
  static U256(e3) {
    return new n6(e3.map((r23) => new v3(r23)));
  }
  static Bool(e3) {
    return new n6(e3.map((r23) => new U3(r23)));
  }
  static MoveString(e3) {
    return new n6(e3.map((r23) => new a3(r23)));
  }
  serialize(e3) {
    e3.serializeVector(this.values);
  }
  static deserialize(e3, r23) {
    let i48 = e3.deserializeUleb128AsU32(), y10 = new Array();
    for (let w5 = 0; w5 < i48; w5 += 1)
      y10.push(r23.deserialize(e3));
    return new n6(y10);
  }
};
var a3 = class n7 extends B {
  constructor(e3) {
    super();
    this.value = e3;
  }
  serialize(e3) {
    e3.serializeStr(this.value);
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  serializeForScriptFunction(e3) {
    let r23 = this.bcsToBytes().slice(1);
    t6.U8(r23).serializeForScriptFunction(e3);
  }
  static deserialize(e3) {
    return new n7(e3.deserializeStr());
  }
};
var f7 = class n8 extends B {
  constructor(e3) {
    super();
    typeof e3 < "u" && e3 !== null ? this.vec = new t6([e3]) : this.vec = new t6([]), [this.value] = this.vec.values;
  }
  serializeForEntryFunction(e3) {
    let r23 = this.bcsToBytes();
    e3.serializeBytes(r23);
  }
  unwrap() {
    if (this.isSome())
      return this.vec.values[0];
    throw new Error("Called unwrap on a MoveOption with no value");
  }
  isSome() {
    return this.vec.values.length === 1;
  }
  serialize(e3) {
    this.vec.serialize(e3);
  }
  static U8(e3) {
    return new n8(e3 != null ? new p6(e3) : void 0);
  }
  static U16(e3) {
    return new n8(e3 != null ? new b3(e3) : void 0);
  }
  static U32(e3) {
    return new n8(e3 != null ? new y3(e3) : void 0);
  }
  static U64(e3) {
    return new n8(e3 != null ? new m6(e3) : void 0);
  }
  static U128(e3) {
    return new n8(e3 != null ? new B2(e3) : void 0);
  }
  static U256(e3) {
    return new n8(e3 != null ? new v3(e3) : void 0);
  }
  static Bool(e3) {
    return new n8(e3 != null ? new U3(e3) : void 0);
  }
  static MoveString(e3) {
    return new n8(e3 != null ? new a3(e3) : void 0);
  }
  static deserialize(e3, r23) {
    let i48 = t6.deserialize(e3, r23);
    return new n8(i48.values[0]);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-B2ZKW23W.mjs
var t7 = class a4 extends B {
  constructor(e3) {
    super();
    this.value = i.fromHexInput(e3).toUint8Array();
  }
  serialize(e3) {
    e3.serializeFixedBytes(this.value);
  }
  serializeForEntryFunction(e3) {
    e3.serialize(this);
  }
  serializeForScriptFunction(e3) {
    e3.serialize(this);
  }
  static deserialize(e3, s12) {
    let o13 = e3.deserializeFixedBytes(s12);
    return new a4(o13);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-RNO5ZG3C.mjs
function M(n24) {
  return typeof n24 == "boolean";
}
function D2(n24) {
  return typeof n24 == "string";
}
function N4(n24) {
  return typeof n24 == "number";
}
function P(n24) {
  return typeof n24 == "number" || typeof n24 == "bigint" || typeof n24 == "string";
}
function w4(n24) {
  return n24 == null;
}
function G4(n24) {
  return A7(n24) || x3(n24) || S4(n24) || B3(n24) || U4(n24) || I(n24) || b4(n24) || T7(n24) || E2(n24) || d3(n24) || n24 instanceof t6 || n24 instanceof f7;
}
function A7(n24) {
  return n24 instanceof U3;
}
function T7(n24) {
  return n24 instanceof c;
}
function E2(n24) {
  return n24 instanceof a3;
}
function d3(n24) {
  return n24 instanceof t7;
}
function x3(n24) {
  return n24 instanceof p6;
}
function S4(n24) {
  return n24 instanceof b3;
}
function B3(n24) {
  return n24 instanceof y3;
}
function U4(n24) {
  return n24 instanceof m6;
}
function I(n24) {
  return n24 instanceof B2;
}
function b4(n24) {
  return n24 instanceof v3;
}
function $3(n24) {
  return "bytecode" in n24;
}
function R(n24, t13) {
  throw new Error(`Type mismatch for argument ${t13}, expected '${n24}'`);
}
function W(n24) {
  let t13 = n24.params.findIndex((e3) => e3 !== "signer" && e3 !== "&signer");
  return t13 < 0 ? n24.params.length : t13;
}
function L2(n24) {
  let t13 = n24.split("::");
  if (t13.length !== 3)
    throw new Error(`Invalid function ${n24}`);
  let e3 = t13[0], F5 = t13[1], l12 = t13[2];
  return { moduleAddress: e3, moduleName: F5, functionName: l12 };
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-V6JFR2CB.mjs
var a5 = class extends B {
};
var i27 = class extends B {
};
var e = class extends B {
};

// node_modules/@scure/bip39/esm/index.js
function nfkd(str) {
  if (typeof str !== "string")
    throw new TypeError(`Invalid mnemonic type: ${typeof str}`);
  return str.normalize("NFKD");
}
function normalize(str) {
  const norm = nfkd(str);
  const words = norm.split(" ");
  if (![12, 15, 18, 21, 24].includes(words.length))
    throw new Error("Invalid mnemonic");
  return { nfkd: norm, words };
}
var salt = (passphrase) => nfkd(`mnemonic${passphrase}`);
function mnemonicToSeedSync(mnemonic, passphrase = "") {
  return pbkdf2(sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-LR65XHSF.mjs
var d4 = /^m\/44'\/637'\/[0-9]+'\/[0-9]+'\/[0-9]+'?$/;
var m7 = /^m\/44'\/637'\/[0-9]+'\/[0-9]+\/[0-9]+$/;
var y4 = ((t13) => (t13.ED25519 = "ed25519 seed", t13))(y4 || {});
var g5 = 2147483648;
function D3(e3) {
  return m7.test(e3);
}
function E3(e3) {
  return d4.test(e3);
}
var A8 = (e3, t13) => {
  let r23 = hmac.create(sha512, e3).update(t13).digest();
  return { key: r23.slice(0, 32), chainCode: r23.slice(32) };
};
var f8 = ({ key: e3, chainCode: t13 }, r23) => {
  let n24 = new ArrayBuffer(4);
  new DataView(n24).setUint32(0, r23);
  let o13 = new Uint8Array(n24), s12 = new Uint8Array([0]), a13 = new Uint8Array([...s12, ...e3, ...o13]);
  return A8(t13, a13);
};
var x4 = (e3) => e3.replace("'", "");
var U5 = (e3) => e3.split("/").slice(1).map(x4);
var h6 = (e3) => {
  let t13 = e3.trim().split(/\s+/).map((r23) => r23.toLowerCase()).join(" ");
  return mnemonicToSeedSync(t13);
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-ZFIMVSCR.mjs
var import_tweetnacl = __toESM(require_nacl_fast(), 1);
var i28 = class i29 extends a5 {
  constructor(e3) {
    super();
    let t13 = i.fromHexInput(e3);
    if (t13.toUint8Array().length !== i29.LENGTH)
      throw new Error(`PublicKey length should be ${i29.LENGTH}`);
    this.key = t13;
  }
  toUint8Array() {
    return this.key.toUint8Array();
  }
  toString() {
    return this.key.toString();
  }
  verifySignature(e3) {
    let { message: t13, signature: a13 } = e3, y10 = i.fromHexInput(t13).toUint8Array(), c14 = a13.toUint8Array();
    return import_tweetnacl.default.sign.detached.verify(y10, c14, this.key.toUint8Array());
  }
  serialize(e3) {
    e3.serializeBytes(this.key.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes();
    return new i29(t13);
  }
  static load(e3) {
    let t13 = e3.deserializeBytes();
    return new i29(t13);
  }
  static isPublicKey(e3) {
    return e3 instanceof i29;
  }
};
i28.LENGTH = 32;
var l5 = i28;
var r7 = class r8 extends i27 {
  constructor(e3) {
    super();
    let t13 = i.fromHexInput(e3);
    if (t13.toUint8Array().length !== r8.LENGTH)
      throw new Error(`PrivateKey length should be ${r8.LENGTH}`);
    this.signingKeyPair = import_tweetnacl.default.sign.keyPair.fromSeed(t13.toUint8Array().slice(0, r8.LENGTH));
  }
  toUint8Array() {
    return this.signingKeyPair.secretKey.slice(0, r8.LENGTH);
  }
  toString() {
    return i.fromHexInput(this.toUint8Array()).toString();
  }
  sign(e3) {
    let t13 = i.fromHexInput(e3), a13 = import_tweetnacl.default.sign.detached(t13.toUint8Array(), this.signingKeyPair.secretKey);
    return new d5(a13);
  }
  serialize(e3) {
    e3.serializeBytes(this.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes();
    return new r8(t13);
  }
  static generate() {
    let e3 = import_tweetnacl.default.sign.keyPair();
    return new r8(e3.secretKey.slice(0, r8.LENGTH));
  }
  publicKey() {
    let e3 = this.signingKeyPair.publicKey;
    return new l5(e3);
  }
  static fromDerivationPath(e3, t13) {
    if (!E3(e3))
      throw new Error(`Invalid derivation path ${e3}`);
    return r8.fromDerivationPathInner(e3, h6(t13));
  }
  static fromDerivationPathInner(e3, t13, a13 = g5) {
    let { key: y10, chainCode: c14 } = A8(r8.SLIP_0010_SEED, t13), x8 = U5(e3).map((u10) => parseInt(u10, 10)), { key: z4 } = x8.reduce((u10, A13) => f8(u10, A13 + a13), { key: y10, chainCode: c14 });
    return new r8(z4);
  }
  static isPrivateKey(e3) {
    return e3 instanceof r8;
  }
};
r7.LENGTH = 32, r7.SLIP_0010_SEED = "ed25519 seed";
var v4 = r7;
var n9 = class n10 extends e {
  constructor(e3) {
    super();
    let t13 = i.fromHexInput(e3);
    if (t13.toUint8Array().length !== n10.LENGTH)
      throw new Error(`Signature length should be ${n10.LENGTH}`);
    this.data = t13;
  }
  toUint8Array() {
    return this.data.toUint8Array();
  }
  toString() {
    return this.data.toString();
  }
  serialize(e3) {
    e3.serializeBytes(this.data.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes();
    return new n10(t13);
  }
  static load(e3) {
    let t13 = e3.deserializeBytes();
    return new n10(t13);
  }
  static isSignature(e3) {
    return e3 instanceof n10;
  }
};
n9.LENGTH = 64;
var d5 = n9;

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-7IGH7N52.mjs
var i30 = class i31 extends a5 {
  constructor(e3) {
    super();
    let { publicKeys: t13, threshold: r23 } = e3;
    if (t13.length > i31.MAX_KEYS || t13.length < i31.MIN_KEYS)
      throw new Error(`Must have between ${i31.MIN_KEYS} and ${i31.MAX_KEYS} public keys, inclusive`);
    if (r23 < i31.MIN_THRESHOLD || r23 > t13.length)
      throw new Error(`Threshold must be between ${i31.MIN_THRESHOLD} and ${t13.length}, inclusive`);
    this.publicKeys = t13, this.threshold = r23;
  }
  toUint8Array() {
    let e3 = new Uint8Array(this.publicKeys.length * l5.LENGTH + 1);
    return this.publicKeys.forEach((t13, r23) => {
      e3.set(t13.toUint8Array(), r23 * l5.LENGTH);
    }), e3[this.publicKeys.length * l5.LENGTH] = this.threshold, e3;
  }
  toString() {
    return i.fromHexInput(this.toUint8Array()).toString();
  }
  verifySignature(e3) {
    throw new Error("TODO - Method not implemented.");
  }
  serialize(e3) {
    e3.serializeBytes(this.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes(), r23 = t13[t13.length - 1], o13 = [];
    for (let a13 = 0; a13 < t13.length - 1; a13 += l5.LENGTH) {
      let s12 = a13;
      o13.push(new l5(t13.subarray(s12, s12 + l5.LENGTH)));
    }
    return new i31({ publicKeys: o13, threshold: r23 });
  }
};
i30.MAX_KEYS = 32, i30.MIN_KEYS = 2, i30.MIN_THRESHOLD = 1;
var g6 = i30;
var n11 = class n12 extends e {
  constructor(e3) {
    super();
    let { signatures: t13, bitmap: r23 } = e3;
    if (r23.length !== n12.BITMAP_LEN)
      throw new Error(`"bitmap" length should be ${n12.BITMAP_LEN}`);
    if (t13.length > n12.MAX_SIGNATURES_SUPPORTED)
      throw new Error(`The number of signatures cannot be greater than ${n12.MAX_SIGNATURES_SUPPORTED}`);
    this.signatures = t13, this.bitmap = r23;
  }
  toUint8Array() {
    let e3 = new Uint8Array(this.signatures.length * d5.LENGTH + n12.BITMAP_LEN);
    return this.signatures.forEach((t13, r23) => {
      e3.set(t13.toUint8Array(), r23 * d5.LENGTH);
    }), e3.set(this.bitmap, this.signatures.length * d5.LENGTH), e3;
  }
  toString() {
    return i.fromHexInput(this.toUint8Array()).toString();
  }
  static createBitmap(e3) {
    let { bits: t13 } = e3, r23 = 128, o13 = new Uint8Array([0, 0, 0, 0]), a13 = /* @__PURE__ */ new Set();
    return t13.forEach((s12) => {
      if (s12 >= n12.MAX_SIGNATURES_SUPPORTED)
        throw new Error(`Cannot have a signature larger than ${n12.MAX_SIGNATURES_SUPPORTED - 1}.`);
      if (a13.has(s12))
        throw new Error("Duplicate bits detected.");
      a13.add(s12);
      let c14 = Math.floor(s12 / 8), y10 = o13[c14];
      y10 |= r23 >> s12 % 8, o13[c14] = y10;
    }), o13;
  }
  serialize(e3) {
    e3.serializeBytes(this.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes(), r23 = t13.subarray(t13.length - 4), o13 = [];
    for (let a13 = 0; a13 < t13.length - r23.length; a13 += d5.LENGTH) {
      let s12 = a13;
      o13.push(new d5(t13.subarray(s12, s12 + d5.LENGTH)));
    }
    return new n12({ signatures: o13, bitmap: r23 });
  }
};
n11.MAX_SIGNATURES_SUPPORTED = 32, n11.BITMAP_LEN = 4;
var p7 = n11;

// node_modules/@noble/hashes/esm/ripemd160.js
var Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);
var Id = Uint8Array.from({ length: 16 }, (_5, i48) => i48);
var Pi = Id.map((i48) => (9 * i48 + 5) % 16);
var idxL = [Id];
var idxR = [Pi];
for (let i48 = 0; i48 < 4; i48++)
  for (let j4 of [idxL, idxR])
    j4.push(j4[i48].map((k3) => Rho[k3]));
var shifts = [
  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
].map((i48) => new Uint8Array(i48));
var shiftsL = idxL.map((idx, i48) => idx.map((j4) => shifts[i48][j4]));
var shiftsR = idxR.map((idx, i48) => idx.map((j4) => shifts[i48][j4]));
var Kl = new Uint32Array([
  0,
  1518500249,
  1859775393,
  2400959708,
  2840853838
]);
var Kr = new Uint32Array([
  1352829926,
  1548603684,
  1836072691,
  2053994217,
  0
]);
var rotl = (word, shift) => word << shift | word >>> 32 - shift;
function f9(group, x8, y10, z4) {
  if (group === 0)
    return x8 ^ y10 ^ z4;
  else if (group === 1)
    return x8 & y10 | ~x8 & z4;
  else if (group === 2)
    return (x8 | ~y10) ^ z4;
  else if (group === 3)
    return x8 & z4 | y10 & ~z4;
  else
    return x8 ^ (y10 | ~z4);
}
var BUF = new Uint32Array(16);
var RIPEMD160 = class extends SHA2 {
  constructor() {
    super(64, 20, 8, true);
    this.h0 = 1732584193 | 0;
    this.h1 = 4023233417 | 0;
    this.h2 = 2562383102 | 0;
    this.h3 = 271733878 | 0;
    this.h4 = 3285377520 | 0;
  }
  get() {
    const { h0, h1, h2: h22, h3: h32, h4: h42 } = this;
    return [h0, h1, h22, h32, h42];
  }
  set(h0, h1, h22, h32, h42) {
    this.h0 = h0 | 0;
    this.h1 = h1 | 0;
    this.h2 = h22 | 0;
    this.h3 = h32 | 0;
    this.h4 = h42 | 0;
  }
  process(view, offset) {
    for (let i48 = 0; i48 < 16; i48++, offset += 4)
      BUF[i48] = view.getUint32(offset, true);
    let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;
    for (let group = 0; group < 5; group++) {
      const rGroup = 4 - group;
      const hbl = Kl[group], hbr = Kr[group];
      const rl = idxL[group], rr = idxR[group];
      const sl = shiftsL[group], sr = shiftsR[group];
      for (let i48 = 0; i48 < 16; i48++) {
        const tl = rotl(al + f9(group, bl, cl, dl) + BUF[rl[i48]] + hbl, sl[i48]) + el | 0;
        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl;
      }
      for (let i48 = 0; i48 < 16; i48++) {
        const tr = rotl(ar + f9(rGroup, br, cr, dr) + BUF[rr[i48]] + hbr, sr[i48]) + er | 0;
        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr;
      }
    }
    this.set(this.h1 + cl + dr | 0, this.h2 + dl + er | 0, this.h3 + el + ar | 0, this.h4 + al + br | 0, this.h0 + bl + cr | 0);
  }
  roundClean() {
    BUF.fill(0);
  }
  destroy() {
    this.destroyed = true;
    this.buffer.fill(0);
    this.set(0, 0, 0, 0, 0);
  }
};
var ripemd160 = wrapConstructor(() => new RIPEMD160());

// node_modules/@scure/bip32/lib/esm/index.js
var Point = secp256k1.ProjectivePoint;
var base58check = createBase58check(sha256);
function bytesToNumber(bytes2) {
  return BigInt(`0x${bytesToHex(bytes2)}`);
}
function numberToBytes(num) {
  return hexToBytes(num.toString(16).padStart(64, "0"));
}
var MASTER_SECRET = utf8ToBytes("Bitcoin seed");
var BITCOIN_VERSIONS = { private: 76066276, public: 76067358 };
var HARDENED_OFFSET = 2147483648;
var hash160 = (data) => ripemd160(sha256(data));
var fromU32 = (data) => createView(data).getUint32(0, false);
var toU32 = (n24) => {
  if (!Number.isSafeInteger(n24) || n24 < 0 || n24 > 2 ** 32 - 1) {
    throw new Error(`Invalid number=${n24}. Should be from 0 to 2 ** 32 - 1`);
  }
  const buf = new Uint8Array(4);
  createView(buf).setUint32(0, n24, false);
  return buf;
};
var HDKey = class _HDKey {
  get fingerprint() {
    if (!this.pubHash) {
      throw new Error("No publicKey set!");
    }
    return fromU32(this.pubHash);
  }
  get identifier() {
    return this.pubHash;
  }
  get pubKeyHash() {
    return this.pubHash;
  }
  get privateKey() {
    return this.privKeyBytes || null;
  }
  get publicKey() {
    return this.pubKey || null;
  }
  get privateExtendedKey() {
    const priv = this.privateKey;
    if (!priv) {
      throw new Error("No private key");
    }
    return base58check.encode(this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv)));
  }
  get publicExtendedKey() {
    if (!this.pubKey) {
      throw new Error("No public key");
    }
    return base58check.encode(this.serialize(this.versions.public, this.pubKey));
  }
  static fromMasterSeed(seed, versions = BITCOIN_VERSIONS) {
    bytes(seed);
    if (8 * seed.length < 128 || 8 * seed.length > 512) {
      throw new Error(`HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`);
    }
    const I5 = hmac(sha512, MASTER_SECRET, seed);
    return new _HDKey({
      versions,
      chainCode: I5.slice(32),
      privateKey: I5.slice(0, 32)
    });
  }
  static fromExtendedKey(base58key, versions = BITCOIN_VERSIONS) {
    const keyBuffer = base58check.decode(base58key);
    const keyView = createView(keyBuffer);
    const version = keyView.getUint32(0, false);
    const opt = {
      versions,
      depth: keyBuffer[4],
      parentFingerprint: keyView.getUint32(5, false),
      index: keyView.getUint32(9, false),
      chainCode: keyBuffer.slice(13, 45)
    };
    const key = keyBuffer.slice(45);
    const isPriv = key[0] === 0;
    if (version !== versions[isPriv ? "private" : "public"]) {
      throw new Error("Version mismatch");
    }
    if (isPriv) {
      return new _HDKey({ ...opt, privateKey: key.slice(1) });
    } else {
      return new _HDKey({ ...opt, publicKey: key });
    }
  }
  static fromJSON(json) {
    return _HDKey.fromExtendedKey(json.xpriv);
  }
  constructor(opt) {
    this.depth = 0;
    this.index = 0;
    this.chainCode = null;
    this.parentFingerprint = 0;
    if (!opt || typeof opt !== "object") {
      throw new Error("HDKey.constructor must not be called directly");
    }
    this.versions = opt.versions || BITCOIN_VERSIONS;
    this.depth = opt.depth || 0;
    this.chainCode = opt.chainCode;
    this.index = opt.index || 0;
    this.parentFingerprint = opt.parentFingerprint || 0;
    if (!this.depth) {
      if (this.parentFingerprint || this.index) {
        throw new Error("HDKey: zero depth with non-zero index/parent fingerprint");
      }
    }
    if (opt.publicKey && opt.privateKey) {
      throw new Error("HDKey: publicKey and privateKey at same time.");
    }
    if (opt.privateKey) {
      if (!secp256k1.utils.isValidPrivateKey(opt.privateKey)) {
        throw new Error("Invalid private key");
      }
      this.privKey = typeof opt.privateKey === "bigint" ? opt.privateKey : bytesToNumber(opt.privateKey);
      this.privKeyBytes = numberToBytes(this.privKey);
      this.pubKey = secp256k1.getPublicKey(opt.privateKey, true);
    } else if (opt.publicKey) {
      this.pubKey = Point.fromHex(opt.publicKey).toRawBytes(true);
    } else {
      throw new Error("HDKey: no public or private key provided");
    }
    this.pubHash = hash160(this.pubKey);
  }
  derive(path) {
    if (!/^[mM]'?/.test(path)) {
      throw new Error('Path must start with "m" or "M"');
    }
    if (/^[mM]'?$/.test(path)) {
      return this;
    }
    const parts = path.replace(/^[mM]'?\//, "").split("/");
    let child = this;
    for (const c14 of parts) {
      const m12 = /^(\d+)('?)$/.exec(c14);
      const m1 = m12 && m12[1];
      if (!m12 || m12.length !== 3 || typeof m1 !== "string") {
        throw new Error(`Invalid child index: ${c14}`);
      }
      let idx = +m1;
      if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {
        throw new Error("Invalid index");
      }
      if (m12[2] === "'") {
        idx += HARDENED_OFFSET;
      }
      child = child.deriveChild(idx);
    }
    return child;
  }
  deriveChild(index) {
    if (!this.pubKey || !this.chainCode) {
      throw new Error("No publicKey or chainCode set");
    }
    let data = toU32(index);
    if (index >= HARDENED_OFFSET) {
      const priv = this.privateKey;
      if (!priv) {
        throw new Error("Could not derive hardened child key");
      }
      data = concatBytes(new Uint8Array([0]), priv, data);
    } else {
      data = concatBytes(this.pubKey, data);
    }
    const I5 = hmac(sha512, this.chainCode, data);
    const childTweak = bytesToNumber(I5.slice(0, 32));
    const chainCode = I5.slice(32);
    if (!secp256k1.utils.isValidPrivateKey(childTweak)) {
      throw new Error("Tweak bigger than curve order");
    }
    const opt = {
      versions: this.versions,
      chainCode,
      depth: this.depth + 1,
      parentFingerprint: this.fingerprint,
      index
    };
    try {
      if (this.privateKey) {
        const added = mod(this.privKey + childTweak, secp256k1.CURVE.n);
        if (!secp256k1.utils.isValidPrivateKey(added)) {
          throw new Error("The tweak was out of range or the resulted private key is invalid");
        }
        opt.privateKey = added;
      } else {
        const added = Point.fromHex(this.pubKey).add(Point.fromPrivateKey(childTweak));
        if (added.equals(Point.ZERO)) {
          throw new Error("The tweak was equal to negative P, which made the result key invalid");
        }
        opt.publicKey = added.toRawBytes(true);
      }
      return new _HDKey(opt);
    } catch (err) {
      return this.deriveChild(index + 1);
    }
  }
  sign(hash) {
    if (!this.privateKey) {
      throw new Error("No privateKey set!");
    }
    bytes(hash, 32);
    return secp256k1.sign(hash, this.privKey).toCompactRawBytes();
  }
  verify(hash, signature) {
    bytes(hash, 32);
    bytes(signature, 64);
    if (!this.publicKey) {
      throw new Error("No publicKey set!");
    }
    let sig;
    try {
      sig = secp256k1.Signature.fromCompact(signature);
    } catch (error) {
      return false;
    }
    return secp256k1.verify(sig, hash, this.publicKey);
  }
  wipePrivateData() {
    this.privKey = void 0;
    if (this.privKeyBytes) {
      this.privKeyBytes.fill(0);
      this.privKeyBytes = void 0;
    }
    return this;
  }
  toJSON() {
    return {
      xpriv: this.privateExtendedKey,
      xpub: this.publicExtendedKey
    };
  }
  serialize(version, key) {
    if (!this.chainCode) {
      throw new Error("No chainCode set");
    }
    bytes(key, 33);
    return concatBytes(toU32(version), new Uint8Array([this.depth]), toU32(this.parentFingerprint), toU32(this.index), this.chainCode, key);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-I7WRJY7K.mjs
var i32 = class i33 extends a5 {
  constructor(e3) {
    super();
    let t13 = i.fromHexInput(e3);
    if (t13.toUint8Array().length !== i33.LENGTH)
      throw new Error(`PublicKey length should be ${i33.LENGTH}`);
    this.key = t13;
  }
  toUint8Array() {
    return this.key.toUint8Array();
  }
  toString() {
    return this.key.toString();
  }
  verifySignature(e3) {
    let { message: t13, signature: a13 } = e3, y10 = i.fromHexInput(t13).toUint8Array(), v9 = sha3_256(y10), x8 = a13.toUint8Array();
    return secp256k1.verify(x8, v9, this.toUint8Array());
  }
  serialize(e3) {
    e3.serializeBytes(this.key.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes();
    return new i33(t13);
  }
  static load(e3) {
    let t13 = e3.deserializeBytes();
    return new i33(t13);
  }
  static isPublicKey(e3) {
    return e3 instanceof i33;
  }
};
i32.LENGTH = 65;
var u3 = i32;
var r9 = class r10 extends i27 {
  constructor(e3) {
    super();
    let t13 = i.fromHexInput(e3);
    if (t13.toUint8Array().length !== r10.LENGTH)
      throw new Error(`PrivateKey length should be ${r10.LENGTH}`);
    this.key = t13;
  }
  toUint8Array() {
    return this.key.toUint8Array();
  }
  toString() {
    return this.key.toString();
  }
  sign(e3) {
    let t13 = i.fromHexInput(e3), a13 = sha3_256(t13.toUint8Array()), y10 = secp256k1.sign(a13, this.key.toUint8Array());
    return new c5(y10.toCompactRawBytes());
  }
  serialize(e3) {
    e3.serializeBytes(this.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes();
    return new r10(t13);
  }
  static generate() {
    let e3 = secp256k1.utils.randomPrivateKey();
    return new r10(e3);
  }
  publicKey() {
    let e3 = secp256k1.getPublicKey(this.key.toUint8Array(), false);
    return new u3(e3);
  }
  static fromDerivationPath(e3, t13) {
    if (!D3(e3))
      throw new Error(`Invalid derivation path ${e3}`);
    return r10.fromDerivationPathInner(e3, h6(t13));
  }
  static fromDerivationPathInner(e3, t13) {
    let { privateKey: a13 } = HDKey.fromMasterSeed(t13).derive(e3);
    if (a13 === null)
      throw new Error("Invalid key");
    return new r10(a13);
  }
  static isPrivateKey(e3) {
    return e3 instanceof r10;
  }
};
r9.LENGTH = 32;
var S5 = r9;
var n13 = class n14 extends e {
  constructor(e3) {
    super();
    let t13 = i.fromHexInput(e3);
    if (t13.toUint8Array().length !== n14.LENGTH)
      throw new Error(`Signature length should be ${n14.LENGTH}, recieved ${t13.toUint8Array().length}`);
    this.data = t13;
  }
  toUint8Array() {
    return this.data.toUint8Array();
  }
  toString() {
    return this.data.toString();
  }
  serialize(e3) {
    e3.serializeBytes(this.data.toUint8Array());
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes();
    return new n14(t13);
  }
  static load(e3) {
    let t13 = e3.deserializeBytes();
    return new n14(t13);
  }
  static isSignature(e3) {
    return e3 instanceof n14;
  }
};
n13.LENGTH = 64;
var c5 = n13;

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-FBFMQZTM.mjs
var c6 = class n15 extends a5 {
  constructor(e3) {
    super();
    this.publicKey = e3;
  }
  toUint8Array() {
    return this.publicKey.toUint8Array();
  }
  toString() {
    return this.publicKey.toString();
  }
  verifySignature(e3) {
    let { message: i48, signature: u10 } = e3;
    return this.publicKey.verifySignature({ message: i48, signature: u10 });
  }
  serialize(e3) {
    if (this.publicKey instanceof l5)
      e3.serializeU32AsUleb128(0), this.publicKey.serialize(e3);
    else if (this.publicKey instanceof u3)
      e3.serializeU32AsUleb128(1), this.publicKey.serialize(e3);
    else
      throw new Error("Unknown public key type");
  }
  static deserialize(e3) {
    let i48 = e3.deserializeUleb128AsU32();
    switch (i48) {
      case 0:
        return new n15(l5.load(e3));
      case 1:
        return new n15(u3.load(e3));
      default:
        throw new Error(`Unknown variant index for AnyPublicKey: ${i48}`);
    }
  }
  static isPublicKey(e3) {
    return e3 instanceof n15;
  }
  isEd25519() {
    return this.publicKey instanceof l5;
  }
  isSecp256k1PublicKey() {
    return this.publicKey instanceof u3;
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-UCHGKGCF.mjs
var p8 = class h7 extends a5 {
  constructor(e3) {
    super();
    let { publicKeys: t13, signaturesRequired: r23 } = e3;
    if (r23 < 1)
      throw new Error("The number of required signatures needs to be greater then 0");
    if (t13.length < r23)
      throw new Error(`Provided ${t13.length} public keys is smaller than the ${r23} required signatures`);
    let i48 = [];
    t13.forEach((s12) => {
      s12 instanceof c6 ? i48.push(s12) : i48.push(new c6(s12));
    }), this.publicKeys = i48, this.signaturesRequired = r23;
  }
  toUint8Array() {
    return this.bcsToBytes();
  }
  createBitmap(e3) {
    let { bits: t13 } = e3, r23 = 128, i48 = new Uint8Array([0, 0, 0, 0]), s12 = /* @__PURE__ */ new Set();
    return t13.forEach((n24, u10) => {
      if (u10 + 1 > this.publicKeys.length)
        throw new Error(`Signature index ${u10 + 1} is out of public keys range, ${this.publicKeys.length}.`);
      if (s12.has(n24))
        throw new Error(`Duplicate bit ${n24} detected.`);
      s12.add(n24);
      let a13 = Math.floor(n24 / 8), c14 = i48[a13];
      c14 |= r23 >> n24 % 8, i48[a13] = c14;
    }), i48;
  }
  toString() {
    return i.fromHexInput(this.toUint8Array()).toString();
  }
  verifySignature(e3) {
    throw new Error("not implemented");
  }
  serialize(e3) {
    e3.serializeVector(this.publicKeys), e3.serializeU8(this.signaturesRequired);
  }
  static deserialize(e3) {
    let t13 = e3.deserializeVector(c6), r23 = e3.deserializeU8();
    return new h7({ publicKeys: t13, signaturesRequired: r23 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-SBMJNU2O.mjs
var i34 = class i35 extends B {
  constructor(r23) {
    super();
    let { data: t13 } = r23, e3 = i.fromHexInput(t13);
    if (e3.toUint8Array().length !== i35.LENGTH)
      throw new Error(`Authentication Key length should be ${i35.LENGTH}`);
    this.data = e3;
  }
  serialize(r23) {
    r23.serializeFixedBytes(this.data.toUint8Array());
  }
  static deserialize(r23) {
    let t13 = r23.deserializeFixedBytes(i35.LENGTH);
    return new i35({ data: t13 });
  }
  toString() {
    return this.data.toString();
  }
  toUint8Array() {
    return this.data.toUint8Array();
  }
  static fromPublicKeyAndScheme(r23) {
    let { publicKey: t13, scheme: e3 } = r23, n24;
    switch (e3) {
      case 3:
      case 2: {
        let a13 = t13.bcsToBytes();
        n24 = new Uint8Array([...a13, e3]);
        break;
      }
      case 0:
      case 1: {
        let a13 = t13.toUint8Array(), p12 = i.fromHexInput(a13).toUint8Array();
        n24 = new Uint8Array([...p12, e3]);
        break;
      }
      default:
        throw new Error(`Scheme ${e3} is not supported`);
    }
    let o13 = sha3_256.create();
    o13.update(n24);
    let f13 = o13.digest();
    return new i35({ data: f13 });
  }
  static fromPublicKey(r23) {
    let { publicKey: t13 } = r23, e3;
    if (t13 instanceof l5)
      e3 = 0 .valueOf();
    else if (t13 instanceof g6)
      e3 = 1 .valueOf();
    else if (t13 instanceof c6)
      e3 = 2 .valueOf();
    else if (t13 instanceof p8)
      e3 = 3 .valueOf();
    else
      throw new Error("No supported authentication scheme for public key");
    return i35.fromPublicKeyAndScheme({ publicKey: t13, scheme: e3 });
  }
  derivedAddress() {
    return new c(this.data.toUint8Array());
  }
};
i34.LENGTH = 32;
var h8 = i34;

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-FP5DPRYL.mjs
var g7 = class a6 {
  constructor(t13) {
    let { privateKey: e3, address: i48, legacy: r23 } = t13, c14 = r23 ?? true;
    if (this.publicKey = e3.publicKey(), this.publicKey instanceof l5)
      c14 ? this.signingScheme = 0 : (this.publicKey = new c6(this.publicKey), this.signingScheme = 2);
    else if (this.publicKey instanceof g6)
      this.signingScheme = 1;
    else if (this.publicKey instanceof u3)
      this.publicKey = new c6(this.publicKey), this.signingScheme = 2;
    else
      throw new Error("Can not create new Account, unsupported public key type");
    this.privateKey = e3, this.accountAddress = i48;
  }
  static generate(t13) {
    let e3 = (t13 == null ? void 0 : t13.legacy) ?? true, i48, r23;
    switch (t13 == null ? void 0 : t13.scheme) {
      case 2:
        i48 = S5.generate(), r23 = new c6(i48.publicKey());
        break;
      default:
        i48 = v4.generate(), e3 === false ? r23 = new c6(i48.publicKey()) : r23 = i48.publicKey();
    }
    let s12 = h8.fromPublicKey({ publicKey: r23 }).derivedAddress();
    return new a6({ privateKey: i48, address: s12, legacy: t13 == null ? void 0 : t13.legacy });
  }
  static fromPrivateKey(t13) {
    let { privateKey: e3, legacy: i48 } = t13, r23 = i48 ?? true, c14;
    if (e3 instanceof S5)
      c14 = new c6(e3.publicKey());
    else if (e3 instanceof v4)
      r23 ? c14 = e3.publicKey() : c14 = new c6(e3.publicKey());
    else
      throw new Error(`Unsupported private key ${e3}`);
    let m12 = h8.fromPublicKey({ publicKey: c14 }).derivedAddress();
    return new a6({ privateKey: e3, address: m12, legacy: r23 });
  }
  static fromPrivateKeyAndAddress(t13) {
    let { privateKey: e3, address: i48, legacy: r23 } = t13;
    return new a6({ privateKey: e3, address: i48, legacy: r23 });
  }
  static fromDerivationPath(t13) {
    let { path: e3, mnemonic: i48, scheme: r23, legacy: c14 } = t13, s12;
    switch (r23) {
      case 2:
        s12 = S5.fromDerivationPath(e3, i48);
        break;
      case 0:
        s12 = v4.fromDerivationPath(e3, i48);
        break;
      default:
        throw new Error(`Unsupported scheme ${r23}`);
    }
    return a6.fromPrivateKey({ privateKey: s12, legacy: c14 });
  }
  static authKey(t13) {
    let { publicKey: e3 } = t13;
    return h8.fromPublicKey({ publicKey: e3 });
  }
  sign(t13) {
    return this.privateKey.sign(t13);
  }
  verifySignature(t13) {
    let { message: e3, signature: i48 } = t13, r23 = i.fromHexInput(e3).toUint8Array();
    return this.publicKey.verifySignature({ message: r23, signature: i48 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-YGMT4GQ5.mjs
async function M2(e3) {
  let { aptosConfig: n24, accountAddress: t13 } = e3, { data: o13 } = await g3({ aptosConfig: n24, originMethod: "getInfo", path: `accounts/${c.from(t13).toString()}` });
  return o13;
}
async function io(e3) {
  let { aptosConfig: n24, accountAddress: t13, options: o13 } = e3;
  return f2({ aptosConfig: n24, originMethod: "getModules", path: `accounts/${c.from(t13).toString()}/modules`, params: { ledger_version: o13 == null ? void 0 : o13.ledgerVersion, start: o13 == null ? void 0 : o13.offset, limit: (o13 == null ? void 0 : o13.limit) ?? 1e3 } });
}
async function uo(e3) {
  var _a;
  return ((_a = e3.options) == null ? void 0 : _a.ledgerVersion) !== void 0 ? P2(e3) : m4(async () => P2(e3), `module-${e3.accountAddress}-${e3.moduleName}`, 1e3 * 60 * 5)();
}
async function P2(e3) {
  let { aptosConfig: n24, accountAddress: t13, moduleName: o13, options: r23 } = e3, { data: s12 } = await g3({ aptosConfig: n24, originMethod: "getModule", path: `accounts/${c.from(t13).toString()}/module/${o13}`, params: { ledger_version: r23 == null ? void 0 : r23.ledgerVersion } });
  return s12;
}
async function go(e3) {
  let { aptosConfig: n24, accountAddress: t13, options: o13 } = e3;
  return f2({ aptosConfig: n24, originMethod: "getTransactions", path: `accounts/${c.from(t13).toString()}/transactions`, params: { start: o13 == null ? void 0 : o13.offset, limit: o13 == null ? void 0 : o13.limit } });
}
async function Ao(e3) {
  let { aptosConfig: n24, accountAddress: t13, options: o13 } = e3;
  return f2({ aptosConfig: n24, originMethod: "getResources", path: `accounts/${c.from(t13).toString()}/resources`, params: { ledger_version: o13 == null ? void 0 : o13.ledgerVersion, start: o13 == null ? void 0 : o13.offset, limit: (o13 == null ? void 0 : o13.limit) ?? 999 } });
}
async function K(e3) {
  let { aptosConfig: n24, accountAddress: t13, resourceType: o13, options: r23 } = e3, { data: s12 } = await g3({ aptosConfig: n24, originMethod: "getResource", path: `accounts/${c.from(t13).toString()}/resource/${o13}`, params: { ledger_version: r23 == null ? void 0 : r23.ledgerVersion } });
  return s12.data;
}
async function Q2(e3) {
  let { aptosConfig: n24, authenticationKey: t13, options: o13 } = e3, r23 = await K({ aptosConfig: n24, accountAddress: "0x1", resourceType: "0x1::account::OriginatingAddress", options: o13 }), { address_map: { handle: s12 } } = r23, a13 = c.from(t13);
  try {
    let i48 = await C2({ aptosConfig: n24, handle: s12, data: { key: a13.toString(), key_type: "address", value_type: "address" }, options: o13 });
    return c.from(i48);
  } catch (i48) {
    if (i48 instanceof s3 && i48.data.error_code === "table_item_not_found")
      return a13;
    throw i48;
  }
}
async function po(e3) {
  let { aptosConfig: n24, accountAddress: t13 } = e3, r23 = { owner_address: { _eq: c.from(t13).toStringLong() }, amount: { _gt: 0 } }, a13 = await p3({ aptosConfig: n24, query: { query: m, variables: { where_condition: r23 } }, originMethod: "getAccountTokensCount" });
  return a13.current_token_ownerships_v2_aggregate.aggregate ? a13.current_token_ownerships_v2_aggregate.aggregate.count : 0;
}
async function fo(e3) {
  let { aptosConfig: n24, accountAddress: t13, options: o13 } = e3, s12 = { owner_address: { _eq: c.from(t13).toStringLong() }, amount: { _gt: 0 } };
  (o13 == null ? void 0 : o13.tokenStandard) && (s12.token_standard = { _eq: o13 == null ? void 0 : o13.tokenStandard });
  let a13 = { query: l2, variables: { where_condition: s12, offset: o13 == null ? void 0 : o13.offset, limit: o13 == null ? void 0 : o13.limit, order_by: o13 == null ? void 0 : o13.orderBy } };
  return (await p3({ aptosConfig: n24, query: a13, originMethod: "getAccountOwnedTokens" })).current_token_ownerships_v2;
}
async function lo(e3) {
  let { aptosConfig: n24, accountAddress: t13, collectionAddress: o13, options: r23 } = e3, s12 = c.from(t13).toStringLong(), a13 = c.from(o13).toStringLong(), i48 = { owner_address: { _eq: s12 }, current_token_data: { collection_id: { _eq: a13 } }, amount: { _gt: 0 } };
  (r23 == null ? void 0 : r23.tokenStandard) && (i48.token_standard = { _eq: r23 == null ? void 0 : r23.tokenStandard });
  let u10 = { query: p, variables: { where_condition: i48, offset: r23 == null ? void 0 : r23.offset, limit: r23 == null ? void 0 : r23.limit, order_by: r23 == null ? void 0 : r23.orderBy } };
  return (await p3({ aptosConfig: n24, query: u10, originMethod: "getAccountOwnedTokensFromCollectionAddress" })).current_token_ownerships_v2;
}
async function yo(e3) {
  let { aptosConfig: n24, accountAddress: t13, options: o13 } = e3, s12 = { owner_address: { _eq: c.from(t13).toStringLong() }, amount: { _gt: 0 } };
  (o13 == null ? void 0 : o13.tokenStandard) && (s12.current_collection = { token_standard: { _eq: o13 == null ? void 0 : o13.tokenStandard } });
  let a13 = { query: c2, variables: { where_condition: s12, offset: o13 == null ? void 0 : o13.offset, limit: o13 == null ? void 0 : o13.limit, order_by: o13 == null ? void 0 : o13.orderBy } };
  return (await p3({ aptosConfig: n24, query: a13, originMethod: "getAccountCollectionsWithOwnedTokens" })).current_collection_ownership_v2_view;
}
async function mo(e3) {
  let { aptosConfig: n24, accountAddress: t13 } = e3, o13 = c.from(t13).toStringLong(), s12 = await p3({ aptosConfig: n24, query: { query: g2, variables: { address: o13 } }, originMethod: "getAccountTransactionsCount" });
  return s12.account_transactions_aggregate.aggregate ? s12.account_transactions_aggregate.aggregate.count : 0;
}
async function _o(e3) {
  let { aptosConfig: n24, accountAddress: t13, coinType: o13 } = e3, r23 = c.from(t13).toStringLong(), s12 = await I2({ aptosConfig: n24, accountAddress: r23, options: { where: { asset_type: { _eq: o13 } } } });
  return s12[0] ? s12[0].amount : 0;
}
async function I2(e3) {
  let { aptosConfig: n24, accountAddress: t13, options: o13 } = e3, r23 = c.from(t13).toStringLong(), s12 = { ...o13 == null ? void 0 : o13.where, owner_address: { _eq: r23 } }, a13 = { query: u, variables: { where_condition: s12, offset: o13 == null ? void 0 : o13.offset, limit: o13 == null ? void 0 : o13.limit, order_by: o13 == null ? void 0 : o13.orderBy } };
  return (await p3({ aptosConfig: n24, query: a13, originMethod: "getAccountCoinsData" })).current_fungible_asset_balances;
}
async function Co(e3) {
  let { aptosConfig: n24, accountAddress: t13 } = e3, o13 = c.from(t13).toStringLong(), s12 = await p3({ aptosConfig: n24, query: { query: _2, variables: { address: o13 } }, originMethod: "getAccountCoinsCount" });
  if (!s12.current_fungible_asset_balances_aggregate.aggregate)
    throw Error("Failed to get the count of account coins");
  return s12.current_fungible_asset_balances_aggregate.aggregate.count;
}
async function ho(e3) {
  let { aptosConfig: n24, accountAddress: t13, options: o13 } = e3, s12 = { owner_address: { _eq: c.from(t13).toStringLong() } }, a13 = { query: d, variables: { where_condition: s12, offset: o13 == null ? void 0 : o13.offset, limit: o13 == null ? void 0 : o13.limit, order_by: o13 == null ? void 0 : o13.orderBy } };
  return (await p3({ aptosConfig: n24, query: a13, originMethod: "getAccountOwnedObjects" })).current_objects;
}
async function wo(e3) {
  let { aptosConfig: n24, privateKey: t13 } = e3, o13 = new c6(t13.publicKey());
  if (t13 instanceof S5) {
    let s12 = h8.fromPublicKeyAndScheme({ publicKey: o13, scheme: 2 }).derivedAddress();
    return g7.fromPrivateKeyAndAddress({ privateKey: t13, address: s12 });
  }
  if (t13 instanceof v4) {
    let r23 = h8.fromPublicKeyAndScheme({ publicKey: o13, scheme: 2 });
    if (await G5({ authKey: r23, aptosConfig: n24 })) {
      let u10 = r23.derivedAddress();
      return g7.fromPrivateKeyAndAddress({ privateKey: t13, address: u10, legacy: false });
    }
    let a13 = h8.fromPublicKeyAndScheme({ publicKey: o13, scheme: 0 });
    if (await G5({ authKey: a13, aptosConfig: n24 })) {
      let u10 = a13.derivedAddress();
      return g7.fromPrivateKeyAndAddress({ privateKey: t13, address: u10, legacy: true });
    }
  }
  throw new Error(`Can't derive account from private key ${t13}`);
}
async function G5(e3) {
  let { aptosConfig: n24, authKey: t13 } = e3, o13 = await Q2({ aptosConfig: n24, authenticationKey: t13.derivedAddress() });
  try {
    return await M2({ aptosConfig: n24, accountAddress: o13 }), true;
  } catch (r23) {
    if (r23.status === 404)
      return false;
    throw new Error(`Error while looking for an account info ${o13.toString()}`);
  }
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-MKERJNYN.mjs
var R2 = new TextEncoder();
function Z2(e3) {
  return (e3 == null ? void 0 : e3.map((n24) => D2(n24) ? Z(n24) : n24)) ?? [];
}
async function P3(e3, n24, t13, i48) {
  var _a;
  let f13 = (_a = (await uo({ aptosConfig: i48, accountAddress: e3, moduleName: n24 })).abi) == null ? void 0 : _a.exposed_functions.find((o13) => o13.name === t13);
  if (!f13)
    throw new Error(`Could not find entry function ABI for '${e3}::${n24}::${t13}'`);
  if (!f13.is_entry)
    throw new Error(`'${e3}::${n24}::${t13}' is not an entry function`);
  let N7 = W(f13), g9 = [];
  for (let o13 = N7; o13 < f13.params.length; o13 += 1)
    g9.push(Z(f13.params[o13], { allowGenerics: true }));
  return { typeParameters: f13.generic_type_params, parameters: g9 };
}
function a7(e3, n24, t13, i48, u10) {
  if (i48 >= n24.parameters.length)
    throw new Error(`Too many arguments for '${e3}', expected ${n24.parameters.length}`);
  let f13 = n24.parameters[i48];
  return U6(t13, f13, i48, u10);
}
function U6(e3, n24, t13, i48) {
  return G4(e3) ? (m8(n24, e3, t13), e3) : X(e3, n24, t13, i48);
}
function X(e3, n24, t13, i48) {
  if (n24.isBool()) {
    if (M(e3))
      return new U3(e3);
    R("boolean", t13);
  }
  if (n24.isAddress()) {
    if (D2(e3))
      return c.fromString(e3);
    R("string | AccountAddress", t13);
  }
  if (n24.isU8()) {
    if (N4(e3))
      return new p6(e3);
    R("number", t13);
  }
  if (n24.isU16()) {
    if (N4(e3))
      return new b3(e3);
    R("number", t13);
  }
  if (n24.isU32()) {
    if (N4(e3))
      return new y3(e3);
    R("number", t13);
  }
  if (n24.isU64()) {
    if (P(e3))
      return new m6(BigInt(e3));
    R("bigint | number | string", t13);
  }
  if (n24.isU128()) {
    if (P(e3))
      return new B2(BigInt(e3));
    R("bigint | number | string", t13);
  }
  if (n24.isU256()) {
    if (P(e3))
      return new v3(BigInt(e3));
    R("bigint | number | string", t13);
  }
  if (n24.isGeneric()) {
    let u10 = n24.value;
    if (u10 < 0 || u10 >= i48.length)
      throw new Error(`Generic argument ${n24.toString()} is invalid for argument ${t13}`);
    return U6(e3, i48[u10], t13, i48);
  }
  if (n24.isVector()) {
    if (n24.value.isU8()) {
      if (D2(e3))
        return t6.U8(R2.encode(e3));
      if (e3 instanceof Uint8Array)
        return t6.U8(e3);
      if (e3 instanceof ArrayBuffer)
        return t6.U8(new Uint8Array(e3));
    }
    if (Array.isArray(e3))
      return new t6(e3.map((u10) => U6(u10, n24.value, t13, i48)));
    throw new Error(`Type mismatch for argument ${t13}, type '${n24.toString()}'`);
  }
  if (n24.isStruct()) {
    if (n24.isString()) {
      if (D2(e3))
        return new a3(e3);
      R("string", t13);
    }
    if (n24.isObject()) {
      if (D2(e3))
        return c.fromString(e3);
      R("string | AccountAddress", t13);
    }
    if (n24.isOption())
      return w4(e3) ? new f7(null) : new f7(U6(e3, n24.value.typeArgs[0], t13, i48));
    throw new Error(`Unsupported struct input type for argument ${t13}, type '${n24.toString()}'`);
  }
  throw new Error(`Type mismatch for argument ${t13}, type '${n24.toString()}'`);
}
function m8(e3, n24, t13) {
  if (e3.isBool()) {
    if (A7(n24))
      return;
    R("Bool", t13);
  }
  if (e3.isAddress()) {
    if (T7(n24))
      return;
    R("AccountAddress", t13);
  }
  if (e3.isU8()) {
    if (x3(n24))
      return;
    R("U8", t13);
  }
  if (e3.isU16()) {
    if (S4(n24))
      return;
    R("U16", t13);
  }
  if (e3.isU32()) {
    if (B3(n24))
      return;
    R("U32", t13);
  }
  if (e3.isU64()) {
    if (U4(n24))
      return;
    R("U64", t13);
  }
  if (e3.isU128()) {
    if (I(n24))
      return;
    R("U128", t13);
  }
  if (e3.isU256()) {
    if (b4(n24))
      return;
    R("U256", t13);
  }
  if (e3.isVector()) {
    if (n24 instanceof t6) {
      n24.values.length > 0 && m8(e3.value, n24.values[0], t13);
      return;
    }
    R("MoveVector", t13);
  }
  if (e3 instanceof b2) {
    if (e3.isString()) {
      if (E2(n24))
        return;
      R("MoveString", t13);
    }
    if (e3.isObject()) {
      if (T7(n24))
        return;
      R("AccountAddress", t13);
    }
    if (e3.isOption()) {
      if (n24 instanceof f7) {
        n24.value !== void 0 && m8(e3.value.typeArgs[0], n24.value, t13);
        return;
      }
      R("MoveOption", t13);
    }
  }
  throw new Error(`Type mismatch for argument ${t13}, expected '${e3.toString()}'`);
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-2QV6HI3M.mjs
var s5 = class t8 extends e {
  constructor(r23) {
    super();
    this.signature = r23;
  }
  toUint8Array() {
    return this.signature.toUint8Array();
  }
  toString() {
    return this.signature.toString();
  }
  serialize(r23) {
    if (this.signature instanceof d5)
      r23.serializeU32AsUleb128(0), this.signature.serialize(r23);
    else if (this.signature instanceof c5)
      r23.serializeU32AsUleb128(1), this.signature.serialize(r23);
    else
      throw new Error("Unknown signature type");
  }
  static deserialize(r23) {
    let n24 = r23.deserializeUleb128AsU32();
    switch (n24) {
      case 0:
        return new t8(d5.load(r23));
      case 1:
        return new t8(c5.load(r23));
      default:
        throw new Error(`Unknown variant index for AnySignature: ${n24}`);
    }
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-ERWQOVBF.mjs
var n16 = class extends B {
  static deserialize(t13) {
    let i48 = t13.deserializeUleb128AsU32();
    switch (i48) {
      case 0:
        return a8.load(t13);
      case 1:
        return u4.load(t13);
      case 2:
        return l6.load(t13);
      case 3:
        return c7.load(t13);
      default:
        throw new Error(`Unknown variant index for AccountAuthenticator: ${i48}`);
    }
  }
  isEd25519() {
    return this instanceof a8;
  }
  isMultiEd25519() {
    return this instanceof u4;
  }
  isSingleKey() {
    return this instanceof l6;
  }
  isMultiKey() {
    return this instanceof c7;
  }
};
var a8 = class s6 extends n16 {
  constructor(i48, e3) {
    super();
    this.public_key = i48, this.signature = e3;
  }
  serialize(i48) {
    i48.serializeU32AsUleb128(0), this.public_key.serialize(i48), this.signature.serialize(i48);
  }
  static load(i48) {
    let e3 = l5.deserialize(i48), r23 = d5.deserialize(i48);
    return new s6(e3, r23);
  }
};
var u4 = class s7 extends n16 {
  constructor(i48, e3) {
    super();
    this.public_key = i48, this.signature = e3;
  }
  serialize(i48) {
    i48.serializeU32AsUleb128(1), this.public_key.serialize(i48), this.signature.serialize(i48);
  }
  static load(i48) {
    let e3 = g6.deserialize(i48), r23 = p7.deserialize(i48);
    return new s7(e3, r23);
  }
};
var l6 = class s8 extends n16 {
  constructor(i48, e3) {
    super();
    this.public_key = i48, this.signature = e3;
  }
  serialize(i48) {
    i48.serializeU32AsUleb128(2), this.public_key.serialize(i48), this.signature.serialize(i48);
  }
  static load(i48) {
    let e3 = c6.deserialize(i48), r23 = s5.deserialize(i48);
    return new s8(e3, r23);
  }
};
var c7 = class s9 extends n16 {
  constructor(i48, e3, r23) {
    super();
    this.public_keys = i48, this.signatures = e3, this.signatures_bitmap = r23;
  }
  serialize(i48) {
    i48.serializeU32AsUleb128(3), this.public_keys.serialize(i48), i48.serializeVector(this.signatures), i48.serializeBytes(this.signatures_bitmap);
  }
  static load(i48) {
    let e3 = p8.deserialize(i48), r23 = i48.deserializeVector(s5), z4 = i48.deserializeBytes();
    return new s9(e3, r23, z4);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-NWRKJFHV.mjs
var c8 = class extends B {
  static deserialize(t13) {
    let e3 = t13.deserializeUleb128AsU32();
    switch (e3) {
      case 0:
        return d6.load(t13);
      case 1:
        return u5.load(t13);
      case 2:
        return l7.load(t13);
      case 3:
        return A9.load(t13);
      case 4:
        return y5.load(t13);
      default:
        throw new Error(`Unknown variant index for TransactionAuthenticator: ${e3}`);
    }
  }
};
var d6 = class i36 extends c8 {
  constructor(e3, r23) {
    super();
    this.public_key = e3, this.signature = r23;
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(0), this.public_key.serialize(e3), this.signature.serialize(e3);
  }
  static load(e3) {
    let r23 = l5.deserialize(e3), s12 = d5.deserialize(e3);
    return new i36(r23, s12);
  }
};
var u5 = class i37 extends c8 {
  constructor(e3, r23) {
    super();
    this.public_key = e3, this.signature = r23;
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(1), this.public_key.serialize(e3), this.signature.serialize(e3);
  }
  static load(e3) {
    let r23 = g6.deserialize(e3), s12 = p7.deserialize(e3);
    return new i37(r23, s12);
  }
};
var l7 = class i38 extends c8 {
  constructor(e3, r23, s12) {
    super();
    this.sender = e3, this.secondary_signer_addresses = r23, this.secondary_signers = s12;
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(2), this.sender.serialize(e3), e3.serializeVector(this.secondary_signer_addresses), e3.serializeVector(this.secondary_signers);
  }
  static load(e3) {
    let r23 = n16.deserialize(e3), s12 = e3.deserializeVector(c), a13 = e3.deserializeVector(n16);
    return new i38(r23, s12, a13);
  }
};
var A9 = class i39 extends c8 {
  constructor(e3, r23, s12, a13) {
    super();
    this.sender = e3, this.secondary_signer_addresses = r23, this.secondary_signers = s12, this.fee_payer = a13;
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(3), this.sender.serialize(e3), e3.serializeVector(this.secondary_signer_addresses), e3.serializeVector(this.secondary_signers), this.fee_payer.address.serialize(e3), this.fee_payer.authenticator.serialize(e3);
  }
  static load(e3) {
    let r23 = n16.deserialize(e3), s12 = e3.deserializeVector(c), a13 = e3.deserializeVector(n16), z4 = c.deserialize(e3), S8 = n16.deserialize(e3), E6 = { address: z4, authenticator: S8 };
    return new i39(r23, s12, a13, E6);
  }
};
var y5 = class i40 extends c8 {
  constructor(e3) {
    super();
    this.sender = e3;
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(4), this.sender.serialize(e3);
  }
  static load(e3) {
    let r23 = n16.deserialize(e3);
    return new i40(r23);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-7D5LHQNS.mjs
var o7 = class t9 extends B {
  constructor(e3, r23) {
    super();
    this.address = e3, this.name = r23;
  }
  static fromStr(e3) {
    let r23 = e3.split("::");
    if (r23.length !== 2)
      throw new Error("Invalid module id.");
    return new t9(c.fromString(r23[0]), new r5(r23[1]));
  }
  serialize(e3) {
    this.address.serialize(e3), this.name.serialize(e3);
  }
  static deserialize(e3) {
    let r23 = c.deserialize(e3), n24 = r5.deserialize(e3);
    return new t9(r23, n24);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-PPTG6BDV.mjs
var t10 = class l8 extends B {
  constructor(e3) {
    super();
    this.value = new t7(e3);
  }
  serialize(e3) {
    e3.serialize(this.value);
  }
  serializeForEntryFunction(e3) {
    e3.serializeU32AsUleb128(this.value.value.length), e3.serialize(this);
  }
  static deserialize(e3, s12) {
    let a13 = t7.deserialize(e3, s12);
    return new l8(a13.value);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-OWZLBIDD.mjs
function D4(r23) {
  let e3 = r23.deserializeUleb128AsU32();
  switch (e3) {
    case 0:
      return p6.deserialize(r23);
    case 1:
      return m6.deserialize(r23);
    case 2:
      return B2.deserialize(r23);
    case 3:
      return c.deserialize(r23);
    case 4:
      return t6.deserialize(r23, p6);
    case 5:
      return U3.deserialize(r23);
    case 6:
      return b3.deserialize(r23);
    case 7:
      return y3.deserialize(r23);
    case 8:
      return v3.deserialize(r23);
    default:
      throw new Error(`Unknown variant index for ScriptTransactionArgument: ${e3}`);
  }
}
var a9 = class extends B {
  static deserialize(e3) {
    let t13 = e3.deserializeUleb128AsU32();
    switch (t13) {
      case 0:
        return A10.load(e3);
      case 2:
        return z2.load(e3);
      case 3:
        return h9.load(e3);
      default:
        throw new Error(`Unknown variant index for TransactionPayload: ${t13}`);
    }
  }
};
var A10 = class r11 extends a9 {
  constructor(t13) {
    super();
    this.script = t13;
  }
  serialize(t13) {
    t13.serializeU32AsUleb128(0), this.script.serialize(t13);
  }
  static load(t13) {
    let i48 = U7.deserialize(t13);
    return new r11(i48);
  }
};
var z2 = class r12 extends a9 {
  constructor(t13) {
    super();
    this.entryFunction = t13;
  }
  serialize(t13) {
    t13.serializeU32AsUleb128(2), this.entryFunction.serialize(t13);
  }
  static load(t13) {
    let i48 = l9.deserialize(t13);
    return new r12(i48);
  }
};
var h9 = class r13 extends a9 {
  constructor(t13) {
    super();
    this.multiSig = t13;
  }
  serialize(t13) {
    t13.serializeU32AsUleb128(3), this.multiSig.serialize(t13);
  }
  static load(t13) {
    let i48 = f10.deserialize(t13);
    return new r13(i48);
  }
};
var l9 = class r14 {
  constructor(e3, t13, i48, n24) {
    this.module_name = e3, this.function_name = t13, this.type_args = i48, this.args = n24;
  }
  static build(e3, t13, i48, n24) {
    return new r14(o7.fromStr(e3), new r5(t13), i48, n24);
  }
  serialize(e3) {
    this.module_name.serialize(e3), this.function_name.serialize(e3), e3.serializeVector(this.type_args), e3.serializeU32AsUleb128(this.args.length), this.args.forEach((t13) => {
      t13.serializeForEntryFunction(e3);
    });
  }
  static deserialize(e3) {
    let t13 = o7.deserialize(e3), i48 = r5.deserialize(e3), n24 = e3.deserializeVector(t5), o13 = e3.deserializeUleb128AsU32(), s12 = new Array();
    for (let c14 = 0; c14 < o13; c14 += 1) {
      let M6 = e3.deserializeUleb128AsU32(), B5 = t10.deserialize(e3, M6);
      s12.push(B5);
    }
    return new r14(t13, i48, n24, s12);
  }
};
var U7 = class r15 {
  constructor(e3, t13, i48) {
    this.bytecode = e3, this.type_args = t13, this.args = i48;
  }
  serialize(e3) {
    e3.serializeBytes(this.bytecode), e3.serializeVector(this.type_args), e3.serializeU32AsUleb128(this.args.length), this.args.forEach((t13) => {
      t13.serializeForScriptFunction(e3);
    });
  }
  static deserialize(e3) {
    let t13 = e3.deserializeBytes(), i48 = e3.deserializeVector(t5), n24 = e3.deserializeUleb128AsU32(), o13 = new Array();
    for (let s12 = 0; s12 < n24; s12 += 1) {
      let c14 = D4(e3);
      o13.push(c14);
    }
    return new r15(t13, i48, o13);
  }
};
var f10 = class r16 {
  constructor(e3, t13) {
    this.multisig_address = e3, this.transaction_payload = t13;
  }
  serialize(e3) {
    this.multisig_address.serialize(e3), this.transaction_payload === void 0 ? e3.serializeBool(false) : (e3.serializeBool(true), this.transaction_payload.serialize(e3));
  }
  static deserialize(e3) {
    let t13 = c.deserialize(e3), i48 = e3.deserializeBool(), n24;
    return i48 && (n24 = b5.deserialize(e3)), new r16(t13, n24);
  }
};
var b5 = class r17 extends B {
  constructor(t13) {
    super();
    this.transaction_payload = t13;
  }
  serialize(t13) {
    t13.serializeU32AsUleb128(0), this.transaction_payload.serialize(t13);
  }
  static deserialize(t13) {
    return t13.deserializeUleb128AsU32(), new r17(l9.deserialize(t13));
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-QKTV6AZ7.mjs
var r18 = class a10 extends B {
  constructor(e3) {
    super();
    this.chainId = e3;
  }
  serialize(e3) {
    e3.serializeU8(this.chainId);
  }
  static deserialize(e3) {
    let s12 = e3.deserializeU8();
    return new a10(s12);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-WC2WSKYZ.mjs
var o8 = class i41 extends B {
  constructor(e3, s12, a13, n24, d9, l12, _5) {
    super();
    this.sender = e3, this.sequence_number = s12, this.payload = a13, this.max_gas_amount = n24, this.gas_unit_price = d9, this.expiration_timestamp_secs = l12, this.chain_id = _5;
  }
  serialize(e3) {
    this.sender.serialize(e3), e3.serializeU64(this.sequence_number), this.payload.serialize(e3), e3.serializeU64(this.max_gas_amount), e3.serializeU64(this.gas_unit_price), e3.serializeU64(this.expiration_timestamp_secs), this.chain_id.serialize(e3);
  }
  static deserialize(e3) {
    let s12 = c.deserialize(e3), a13 = e3.deserializeU64(), n24 = a9.deserialize(e3), d9 = e3.deserializeU64(), l12 = e3.deserializeU64(), _5 = e3.deserializeU64(), b9 = r18.deserialize(e3);
    return new i41(s12, a13, n24, d9, l12, _5, b9);
  }
};
var c9 = class extends B {
  static deserialize(r23) {
    let e3 = r23.deserializeUleb128AsU32();
    switch (e3) {
      case 0:
        return p9.load(r23);
      case 1:
        return y6.load(r23);
      default:
        throw new Error(`Unknown variant index for RawTransactionWithData: ${e3}`);
    }
  }
};
var p9 = class i42 extends c9 {
  constructor(e3, s12) {
    super();
    this.raw_txn = e3, this.secondary_signer_addresses = s12;
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(0), this.raw_txn.serialize(e3), e3.serializeVector(this.secondary_signer_addresses);
  }
  static load(e3) {
    let s12 = o8.deserialize(e3), a13 = e3.deserializeVector(c);
    return new i42(s12, a13);
  }
};
var y6 = class i43 extends c9 {
  constructor(e3, s12, a13) {
    super();
    this.raw_txn = e3, this.secondary_signer_addresses = s12, this.fee_payer_address = a13;
  }
  serialize(e3) {
    e3.serializeU32AsUleb128(1), this.raw_txn.serialize(e3), e3.serializeVector(this.secondary_signer_addresses), this.fee_payer_address.serialize(e3);
  }
  static load(e3) {
    let s12 = o8.deserialize(e3), a13 = e3.deserializeVector(c), n24 = c.deserialize(e3);
    return new i43(s12, a13, n24);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-XQIWF5HY.mjs
var n17 = class o9 extends B {
  constructor(t13, a13) {
    super();
    this.raw_txn = t13, this.authenticator = a13;
  }
  serialize(t13) {
    this.raw_txn.serialize(t13), this.authenticator.serialize(t13);
  }
  static deserialize(t13) {
    let a13 = o8.deserialize(t13), s12 = c8.deserialize(t13);
    return new o9(a13, s12);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-77SKA4HT.mjs
var n18 = { mainnet: "https://indexer.mainnet.aptoslabs.com/v1/graphql", testnet: "https://indexer-testnet.staging.gcp.aptosdev.com/v1/graphql", devnet: "https://indexer-devnet.staging.gcp.aptosdev.com/v1/graphql", randomnet: "https://indexer-randomnet.hasura.app/v1/graphql", local: "http://127.0.0.1:8090/v1/graphql" };
var o10 = { mainnet: "https://fullnode.mainnet.aptoslabs.com/v1", testnet: "https://fullnode.testnet.aptoslabs.com/v1", devnet: "https://fullnode.devnet.aptoslabs.com/v1", randomnet: "https://fullnode.random.aptoslabs.com/v1", local: "http://127.0.0.1:8080/v1" };
var a11 = { mainnet: "https://faucet.mainnet.aptoslabs.com", testnet: "https://faucet.testnet.aptoslabs.com", devnet: "https://faucet.devnet.aptoslabs.com", randomnet: "https://faucet.random.aptoslabs.com", local: "http://127.0.0.1:8081" };
var e2 = ((t13) => (t13.MAINNET = "mainnet", t13.TESTNET = "testnet", t13.DEVNET = "devnet", t13.RANDOMNET = "randomnet", t13.LOCAL = "local", t13.CUSTOM = "custom", t13))(e2 || {});
var s10 = { mainnet: 1, testnet: 2, randomnet: 70 };
var r19 = { mainnet: "mainnet", testnet: "testnet", devnet: "devnet", randomnet: "randomnet", local: "local", custom: "custom" };

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-SZYATFM7.mjs
async function Wn(n24) {
  if ($3(n24))
    return cn(n24);
  let { moduleAddress: e3, moduleName: t13, functionName: o13 } = L2(n24.function), a13 = await m4(async () => P3(e3, t13, o13, n24.aptosConfig), `entry-function-${n24.aptosConfig.network}-${e3}-${t13}-${o13}`, 1e3 * 60 * 5)();
  return sn({ abi: a13, ...n24 });
}
function sn(n24) {
  let e3 = n24.abi, { moduleAddress: t13, moduleName: o13, functionName: a13 } = L2(n24.function), r23 = Z2(n24.typeArguments);
  if (r23.length !== e3.typeParameters.length)
    throw new Error(`Type argument count mismatch, expected ${e3.typeParameters.length}, received ${r23.length}`);
  let i48 = n24.functionArguments.map((s12, A13) => a7(n24.function, e3, s12, A13, r23));
  if (i48.length !== e3.parameters.length)
    throw new Error(`Too few arguments for '${t13}::${o13}::${a13}', expected ${e3.parameters.length} but got ${i48.length}`);
  let c14 = l9.build(`${t13}::${o13}`, a13, r23, i48);
  if ("multisigAddress" in n24) {
    let s12 = c.from(n24.multisigAddress);
    return new h9(new f10(s12, new b5(c14)));
  }
  return new z2(c14);
}
function cn(n24) {
  return new A10(new U7(i.fromHexInput(n24.bytecode).toUint8Array(), n24.typeArguments ?? [], n24.functionArguments));
}
async function un(n24) {
  let { aptosConfig: e3, sender: t13, payload: o13, options: a13, feePayerAddress: r23 } = n24, i48 = s10[e3.network] ? Promise.resolve({ chain_id: s10[e3.network] }) : l4({ aptosConfig: e3 }), c14 = (a13 == null ? void 0 : a13.gasUnitPrice) ? Promise.resolve({ gas_estimate: a13.gasUnitPrice }) : L({ aptosConfig: e3 }), [{ chain_id: s12 }, { gas_estimate: A13 }] = await Promise.all([i48, c14]), y10 = (a13 == null ? void 0 : a13.accountSequenceNumber) !== void 0 ? Promise.resolve({ sequence_number: a13.accountSequenceNumber }) : M2({ aptosConfig: e3, accountAddress: t13 }), m12;
  if (r23 && c.from(r23).equals(c.ZERO))
    try {
      let { sequence_number: T10 } = await y10;
      m12 = T10;
    } catch {
      m12 = "0";
    }
  else {
    let { sequence_number: T10 } = await y10;
    m12 = T10;
  }
  let { maxGasAmount: en, gasUnitPrice: an, expireTimestamp: rn } = { maxGasAmount: (a13 == null ? void 0 : a13.maxGasAmount) ? BigInt(a13.maxGasAmount) : BigInt(o4), gasUnitPrice: BigInt(A13), expireTimestamp: BigInt(Math.floor(Date.now() / 1e3) + N), ...a13 };
  return new o8(c.from(t13), BigInt(m12), o13, BigInt(en), BigInt(an), BigInt(rn), new r18(s12));
}
async function $n(n24) {
  var _a;
  let { aptosConfig: e3, sender: t13, payload: o13, options: a13, feePayerAddress: r23 } = n24, i48 = await un({ aptosConfig: e3, sender: t13, payload: o13, options: a13, feePayerAddress: r23 });
  if ("secondarySignerAddresses" in n24) {
    let c14 = ((_a = n24.secondarySignerAddresses) == null ? void 0 : _a.map((s12) => c.from(s12))) ?? [];
    return { rawTransaction: i48, secondarySignerAddresses: c14, feePayerAddress: n24.feePayerAddress ? c.from(n24.feePayerAddress) : void 0 };
  }
  return { rawTransaction: i48, feePayerAddress: n24.feePayerAddress ? c.from(n24.feePayerAddress) : void 0 };
}
function Cn(n24) {
  let { signerPublicKey: e3, transaction: t13, secondarySignersPublicKeys: o13, feePayerPublicKey: a13 } = n24, r23 = I3(e3);
  if (t13.feePayerAddress) {
    let c14 = new y6(t13.rawTransaction, t13.secondarySignerAddresses ?? [], t13.feePayerAddress), s12 = [];
    o13 && (s12 = o13.map((m12) => I3(m12)));
    let A13 = I3(a13), y10 = new A9(r23, t13.secondarySignerAddresses ?? [], s12, { address: t13.feePayerAddress, authenticator: A13 });
    return new n17(c14.raw_txn, y10).bcsToBytes();
  }
  if (t13.secondarySignerAddresses) {
    let c14 = new p9(t13.rawTransaction, t13.secondarySignerAddresses), s12 = [];
    s12 = o13.map((y10) => I3(y10));
    let A13 = new l7(r23, t13.secondarySignerAddresses, s12);
    return new n17(c14.raw_txn, A13).bcsToBytes();
  }
  let i48;
  if (r23 instanceof a8)
    i48 = new d6(r23.public_key, r23.signature);
  else if (r23 instanceof l6)
    i48 = new y5(r23);
  else
    throw new Error("Invalid public key");
  return new n17(t13.rawTransaction, i48).bcsToBytes();
}
function I3(n24) {
  if (n24 instanceof c6) {
    if (n24.publicKey instanceof l5)
      return new l6(n24, new s5(new d5(new Uint8Array(64))));
    if (n24.publicKey instanceof u3)
      return new l6(n24, new s5(new c5(new Uint8Array(64))));
  }
  return new a8(new l5(n24.toUint8Array()), new d5(new Uint8Array(64)));
}
function Kn(n24) {
  let { signer: e3, transaction: t13 } = n24, o13 = An(t13), a13 = e3.sign(o13);
  switch (e3.signingScheme) {
    case 0:
      return new a8(new l5(e3.publicKey.toUint8Array()), new d5(a13.toUint8Array()));
    case 2:
      if (!c6.isPublicKey(e3.publicKey))
        throw new Error(`Cannot sign transaction, public key does not match ${e3.signingScheme}`);
      return new l6(e3.publicKey, new s5(a13));
    default:
      throw new Error(`Cannot sign transaction, signing scheme ${e3.signingScheme} not supported`);
  }
}
function kn(n24) {
  let { transaction: e3, senderAuthenticator: t13, feePayerAuthenticator: o13, additionalSignersAuthenticators: a13 } = n24, r23 = tn(e3);
  if ((o13 || a13) && (r23 instanceof p9 || r23 instanceof y6))
    return dn(r23, t13, o13, a13);
  if (t13 instanceof a8 && r23 instanceof o8) {
    let i48 = new d6(t13.public_key, t13.signature);
    return new n17(r23, i48).bcsToBytes();
  }
  if ((t13 instanceof l6 || t13 instanceof c7) && r23 instanceof o8) {
    let i48 = new y5(t13);
    return new n17(r23, i48).bcsToBytes();
  }
  throw new Error(`Cannot generate a signed transaction, ${t13} is not a supported account authentication scheme`);
}
function tn(n24) {
  return n24.feePayerAddress ? new y6(n24.rawTransaction, n24.secondarySignerAddresses ?? [], n24.feePayerAddress) : n24.secondarySignerAddresses ? new p9(n24.rawTransaction, n24.secondarySignerAddresses) : n24.rawTransaction;
}
function dn(n24, e3, t13, o13) {
  if (n24 instanceof y6) {
    if (!t13)
      throw new Error("Must provide a feePayerAuthenticator argument to generate a signed fee payer transaction");
    let a13 = new A9(e3, n24.secondary_signer_addresses, o13 ?? [], { address: n24.fee_payer_address, authenticator: t13 });
    return new n17(n24.raw_txn, a13).bcsToBytes();
  }
  if (n24 instanceof p9) {
    if (!o13)
      throw new Error("Must provide a additionalSignersAuthenticators argument to generate a signed multi agent transaction");
    let a13 = new l7(e3, n24.secondary_signer_addresses, o13 ?? []);
    return new n17(n24.raw_txn, a13).bcsToBytes();
  }
  throw new Error(`Cannot prepare multi signers transaction to submission, ${typeof n24} transaction is not supported`);
}
function An(n24) {
  let e3 = tn(n24), t13 = sha3_256.create();
  if (e3 instanceof o8)
    t13.update(a2);
  else if (e3 instanceof p9)
    t13.update(r3);
  else if (e3 instanceof y6)
    t13.update(r3);
  else
    throw new Error(`Unknown transaction type to sign on: ${e3}`);
  let o13 = t13.digest(), a13 = e3.bcsToBytes(), r23 = new Uint8Array(o13.length + a13.length);
  return r23.set(o13), r23.set(a13, o13.length), r23;
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-O57QZZF2.mjs
var c10 = class extends B {
  constructor(e3) {
    super();
    this.accountAddress = c.ONE;
    this.moduleName = new a3("account");
    this.structName = new a3("RotationProofChallenge");
    this.sequenceNumber = new m6(e3.sequenceNumber), this.originator = e3.originator, this.currentAuthKey = e3.currentAuthKey, this.newPublicKey = t6.U8(e3.newPublicKey.toUint8Array());
  }
  serialize(e3) {
    e3.serialize(this.accountAddress), e3.serialize(this.moduleName), e3.serialize(this.structName), e3.serialize(this.sequenceNumber), e3.serialize(this.originator), e3.serialize(this.currentAuthKey), e3.serialize(this.newPublicKey);
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-6UNBJAV6.mjs
async function h10(t13) {
  let a13 = await D5(t13);
  return G6(t13, a13);
}
async function D5(t13) {
  let { aptosConfig: a13, data: n24 } = t13, e3, o13;
  return "bytecode" in n24 ? o13 = await Wn(n24) : "multisigAddress" in n24 ? n24.abi ? o13 = sn({ abi: n24.abi, ...n24 }) : (e3 = { aptosConfig: a13, multisigAddress: n24.multisigAddress, function: n24.function, functionArguments: n24.functionArguments, typeArguments: n24.typeArguments }, o13 = await Wn(e3)) : n24.abi ? o13 = sn({ abi: n24.abi, ...n24 }) : (e3 = { aptosConfig: a13, function: n24.function, functionArguments: n24.functionArguments, typeArguments: n24.typeArguments }, o13 = await Wn(e3)), o13;
}
async function G6(t13, a13) {
  let { aptosConfig: n24, sender: e3, options: o13 } = t13, i48;
  if (U8(t13) && (i48 = c.ZERO.toString()), _3(t13)) {
    let { secondarySignerAddresses: c14 } = t13;
    return $n({ aptosConfig: n24, sender: e3, payload: a13, options: o13, secondarySignerAddresses: c14, feePayerAddress: i48 });
  }
  return $n({ aptosConfig: n24, sender: e3, payload: a13, options: o13, feePayerAddress: i48 });
}
function U8(t13) {
  return t13.withFeePayer === true;
}
function _3(t13) {
  return "secondarySignerAddresses" in t13;
}
function Y(t13) {
  let { transaction: a13 } = t13;
  return An(a13);
}
function K2(t13) {
  return Kn({ ...t13 });
}
async function $4(t13) {
  var _a, _b, _c;
  let { aptosConfig: a13, transaction: n24, signerPublicKey: e3, secondarySignersPublicKeys: o13, feePayerPublicKey: i48, options: c14 } = t13, u10 = Cn({ transaction: n24, signerPublicKey: e3, secondarySignersPublicKeys: o13, feePayerPublicKey: i48, options: c14 }), { data: A13 } = await A3({ aptosConfig: a13, body: u10, path: "transactions/simulate", params: { estimate_gas_unit_price: ((_a = t13.options) == null ? void 0 : _a.estimateGasUnitPrice) ?? false, estimate_max_gas_amount: ((_b = t13.options) == null ? void 0 : _b.estimateMaxGasAmount) ?? false, estimate_prioritized_gas_unit_price: ((_c = t13.options) == null ? void 0 : _c.estimatePrioritizedGasUnitPrice) ?? false }, originMethod: "simulateTransaction", contentType: "application/x.aptos.signed_transaction+bcs" });
  return A13;
}
async function B4(t13) {
  let { aptosConfig: a13 } = t13, n24 = kn({ ...t13 }), { data: e3 } = await A3({ aptosConfig: a13, body: n24, path: "transactions", originMethod: "submitTransaction", contentType: "application/x.aptos.signed_transaction+bcs" });
  return e3;
}
async function M3(t13) {
  let { aptosConfig: a13, signer: n24, transaction: e3 } = t13, o13 = K2({ signer: n24, transaction: e3 });
  return B4({ aptosConfig: a13, transaction: e3, senderAuthenticator: o13 });
}
var v5 = { typeParameters: [], parameters: [y2.u8(), new y2(y2.u8())] };
async function nn(t13) {
  let { aptosConfig: a13, account: n24, metadataBytes: e3, moduleBytecode: o13, options: i48 } = t13, c14 = o13.map((u10) => t6.U8(u10));
  return h10({ aptosConfig: a13, sender: c.from(n24), data: { function: "0x1::code::publish_package_txn", functionArguments: [t6.U8(e3), new t6(c14)], abi: v5 }, options: i48 });
}
var N5 = { typeParameters: [], parameters: [new u2(), y2.u8(), new u2(), y2.u8(), y2.u8(), y2.u8()] };
async function tn2(t13) {
  let { aptosConfig: a13, fromAccount: n24, toNewPrivateKey: e3 } = t13, o13 = await M2({ aptosConfig: a13, accountAddress: n24.accountAddress }), i48 = g7.fromPrivateKey({ privateKey: e3, legacy: true }), u10 = new c10({ sequenceNumber: BigInt(o13.sequence_number), originator: n24.accountAddress, currentAuthKey: c.from(o13.authentication_key), newPublicKey: i48.publicKey }).bcsToBytes(), A13 = n24.sign(u10), R4 = i48.sign(u10), x8 = await h10({ aptosConfig: a13, sender: n24.accountAddress, data: { function: "0x1::account::rotate_authentication_key", functionArguments: [new p6(n24.signingScheme.valueOf()), t6.U8(n24.publicKey.toUint8Array()), new p6(i48.signingScheme.valueOf()), t6.U8(i48.publicKey.toUint8Array()), t6.U8(A13.toUint8Array()), t6.U8(R4.toUint8Array())], abi: N5 } });
  return M3({ aptosConfig: a13, signer: n24, transaction: x8 });
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-JLL7BCD4.mjs
var o11 = class {
  constructor(n24) {
    this.config = n24;
  }
  async simple(n24) {
    return h10({ aptosConfig: this.config, ...n24 });
  }
  async multiAgent(n24) {
    return h10({ aptosConfig: this.config, ...n24 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-D2GNCG27.mjs
var n19 = () => Math.floor(Date.now() / 1e3);
var r20 = class {
  constructor(t13, i48, o13, a13, c14) {
    this.lastUncommintedNumber = null;
    this.currentNumber = null;
    this.lock = false;
    this.aptosConfig = t13, this.account = i48, this.maxWaitTime = o13, this.maximumInFlight = a13, this.sleepTime = c14;
  }
  async nextSequenceNumber() {
    for (; this.lock; )
      await r4(this.sleepTime);
    this.lock = true;
    let t13 = BigInt(0);
    try {
      if ((this.lastUncommintedNumber === null || this.currentNumber === null) && await this.initialize(), this.currentNumber - this.lastUncommintedNumber >= this.maximumInFlight) {
        await this.update();
        let i48 = n19();
        for (; this.currentNumber - this.lastUncommintedNumber >= this.maximumInFlight; )
          await r4(this.sleepTime), n19() - i48 > this.maxWaitTime ? (console.warn(`Waited over 30 seconds for a transaction to commit, resyncing ${this.account.accountAddress.toString()}`), await this.initialize()) : await this.update();
      }
      t13 = this.currentNumber, this.currentNumber += BigInt(1);
    } catch (i48) {
      console.error("error in getting next sequence number for this account", i48);
    } finally {
      this.lock = false;
    }
    return t13;
  }
  async initialize() {
    let { sequence_number: t13 } = await M2({ aptosConfig: this.aptosConfig, accountAddress: this.account.accountAddress });
    this.currentNumber = BigInt(t13), this.lastUncommintedNumber = BigInt(t13);
  }
  async update() {
    let { sequence_number: t13 } = await M2({ aptosConfig: this.aptosConfig, accountAddress: this.account.accountAddress });
    return this.lastUncommintedNumber = BigInt(t13), this.lastUncommintedNumber;
  }
  async synchronize() {
    if (this.lastUncommintedNumber !== this.currentNumber) {
      for (; this.lock; )
        await r4(this.sleepTime);
      this.lock = true;
      try {
        await this.update();
        let t13 = n19();
        for (; this.lastUncommintedNumber !== this.currentNumber; )
          n19() - t13 > this.maxWaitTime ? (console.warn(`Waited over 30 seconds for a transaction to commit, resyncing ${this.account.accountAddress.toString()}`), await this.initialize()) : (await r4(this.sleepTime), await this.update());
      } catch (t13) {
        console.error("error in synchronizing this account sequence number with the one on chain", t13);
      } finally {
        this.lock = false;
      }
    }
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-U6Z4FNB7.mjs
var i44 = class {
  constructor() {
    this.queue = [];
    this.pendingDequeue = [];
    this.cancelled = false;
  }
  enqueue(e3) {
    var _a;
    if (this.cancelled = false, this.pendingDequeue.length > 0) {
      (_a = this.pendingDequeue.shift()) == null ? void 0 : _a.resolve(e3);
      return;
    }
    this.queue.push(e3);
  }
  async dequeue() {
    return this.queue.length > 0 ? Promise.resolve(this.queue.shift()) : new Promise((e3, u10) => {
      this.pendingDequeue.push({ resolve: e3, reject: u10 });
    });
  }
  isEmpty() {
    return this.queue.length === 0;
  }
  cancel() {
    this.cancelled = true, this.pendingDequeue.forEach(async ({ reject: e3 }) => {
      e3(new n20("Task cancelled"));
    }), this.pendingDequeue = [], this.queue.length = 0;
  }
  isCancelled() {
    return this.cancelled;
  }
  pendingDequeueLength() {
    return this.pendingDequeue.length;
  }
};
var n20 = class extends Error {
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-Z6XNTGNK.mjs
var p10 = "fulfilled";
var T8 = ((n24) => (n24.TransactionSent = "transactionSent", n24.TransactionSendFailed = "transactionSendFailed", n24.TransactionExecuted = "transactionExecuted", n24.TransactionExecutionFailed = "transactionExecutionFailed", n24.ExecutionFinish = "executionFinish", n24))(T8 || {});
var m9 = class extends eventemitter3_default {
  constructor(t13, e3, a13 = 30, n24 = 100, i48 = 10) {
    super();
    this.taskQueue = new i44();
    this.transactionsQueue = new i44();
    this.outstandingTransactions = new i44();
    this.sentTransactions = [];
    this.executedTransactions = [];
    this.aptosConfig = t13, this.account = e3, this.started = false, this.accountSequnceNumber = new r20(t13, e3, a13, n24, i48);
  }
  async submitNextTransaction() {
    try {
      for (; ; ) {
        let t13 = await this.accountSequnceNumber.nextSequenceNumber();
        if (t13 === null)
          return;
        let e3 = await this.generateNextTransaction(this.account, t13);
        if (!e3)
          return;
        let a13 = M3({ aptosConfig: this.aptosConfig, transaction: e3, signer: this.account });
        await this.outstandingTransactions.enqueue([a13, t13]);
      }
    } catch (t13) {
      if (t13 instanceof n20)
        return;
      throw new Error(`Submit transaction failed for ${this.account.accountAddress.toString()} with error ${t13}`);
    }
  }
  async processTransactions() {
    try {
      for (; ; ) {
        let t13 = [], e3 = [], [a13, n24] = await this.outstandingTransactions.dequeue();
        for (t13.push(a13), e3.push(n24); !this.outstandingTransactions.isEmpty(); )
          [a13, n24] = await this.outstandingTransactions.dequeue(), t13.push(a13), e3.push(n24);
        let i48 = await Promise.allSettled(t13);
        for (let s12 = 0; s12 < i48.length && s12 < e3.length; s12 += 1) {
          let r23 = i48[s12];
          n24 = e3[s12], r23.status === p10 ? (this.sentTransactions.push([r23.value.hash, n24, null]), this.emit("transactionSent", { message: `transaction hash ${r23.value.hash} has been committed to chain`, transactionHash: r23.value.hash }), await this.checkTransaction(r23, n24)) : (this.sentTransactions.push([r23.status, n24, r23.reason]), this.emit("transactionSendFailed", { message: `failed to commit transaction ${this.sentTransactions.length} with error ${r23.reason}`, error: r23.reason }));
        }
        this.emit("executionFinish", { message: `execute ${i48.length} transactions finished` });
      }
    } catch (t13) {
      if (t13 instanceof n20)
        return;
      throw new Error(`Process execution failed for ${this.account.accountAddress.toString()} with error ${t13}`);
    }
  }
  async checkTransaction(t13, e3) {
    try {
      let a13 = [];
      a13.push(G2({ aptosConfig: this.aptosConfig, transactionHash: t13.value.hash }));
      let n24 = await Promise.allSettled(a13);
      for (let i48 = 0; i48 < n24.length; i48 += 1) {
        let s12 = n24[i48];
        s12.status === p10 ? (this.executedTransactions.push([s12.value.hash, e3, null]), this.emit("transactionExecuted", { message: `transaction hash ${s12.value.hash} has been executed on chain`, transactionHash: t13.value.hash })) : (this.executedTransactions.push([s12.status, e3, s12.reason]), this.emit("transactionExecutionFailed", { message: `failed to execute transaction ${this.executedTransactions.length} with error ${s12.reason}`, error: s12.reason }));
      }
    } catch (a13) {
      throw new Error(`Check transaction failed for ${this.account.accountAddress.toString()} with error ${a13}`);
    }
  }
  async push(t13, e3) {
    this.transactionsQueue.enqueue([t13, e3]);
  }
  async generateNextTransaction(t13, e3) {
    if (this.transactionsQueue.isEmpty())
      return;
    let [a13, n24] = await this.transactionsQueue.dequeue();
    return h10({ aptosConfig: this.aptosConfig, sender: t13.accountAddress, data: a13, options: { ...n24, accountSequenceNumber: e3 } });
  }
  async run() {
    try {
      for (; !this.taskQueue.isCancelled(); )
        await (await this.taskQueue.dequeue())();
    } catch (t13) {
      throw new Error(`Unable to start transaction batching: ${t13}`);
    }
  }
  start() {
    if (this.started)
      throw new Error("worker has already started");
    this.started = true, this.taskQueue.enqueue(() => this.submitNextTransaction()), this.taskQueue.enqueue(() => this.processTransactions()), this.run();
  }
  stop() {
    if (this.taskQueue.isCancelled())
      throw new Error("worker has already stopped");
    this.started = false, this.taskQueue.cancel();
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-J6RCCKOA.mjs
var i45 = class extends eventemitter3_default {
  constructor(t13) {
    super();
    this.config = t13;
  }
  start(t13) {
    let { sender: n24 } = t13;
    this.account = n24, this.transactionWorker = new m9(this.config, n24), this.transactionWorker.start(), this.registerToEvents();
  }
  push(t13) {
    let { data: n24, options: o13 } = t13;
    for (let r23 of n24)
      this.transactionWorker.push(r23, o13);
  }
  registerToEvents() {
    this.transactionWorker.on("transactionSent", async (t13) => {
      this.emit("transactionSent", t13);
    }), this.transactionWorker.on("transactionSendFailed", async (t13) => {
      this.emit("transactionSendFailed", t13);
    }), this.transactionWorker.on("transactionExecuted", async (t13) => {
      this.emit("transactionExecuted", t13);
    }), this.transactionWorker.on("transactionExecutionFailed", async (t13) => {
      this.emit("transactionExecutionFailed", t13);
    }), this.transactionWorker.on("executionFinish", async (t13) => {
      this.emit("executionFinish", t13);
    });
  }
  forSingleAccount(t13) {
    try {
      let { sender: n24, data: o13, options: r23 } = t13;
      this.start({ sender: n24 }), this.push({ data: o13, options: r23 });
    } catch (n24) {
      throw new Error(`failed to submit transactions with error: ${n24}`);
    }
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-6EMN3BOV.mjs
function o12(a13, i48, e3) {
  let r23 = e3.value;
  return e3.value = async function(...t13) {
    let [n24] = t13;
    if (n24.transaction.feePayerAddress && !n24.feePayerAuthenticator)
      throw new Error("You are submitting a Fee Payer transaction but missing the feePayerAuthenticator");
    return r23.apply(this, t13);
  }, e3;
}
function u6(a13, i48, e3) {
  let r23 = e3.value;
  return e3.value = async function(...t13) {
    let [n24] = t13;
    if (n24.transaction.feePayerAddress && !n24.feePayerPublicKey)
      throw new Error("You are simulating a Fee Payer transaction but missing the feePayerPublicKey");
    return r23.apply(this, t13);
  }, e3;
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-CX5ULWJQ.mjs
var i46 = class {
  constructor(n24) {
    this.config = n24;
  }
  async simple(n24) {
    return $4({ aptosConfig: this.config, ...n24 });
  }
  async multiAgent(n24) {
    return $4({ aptosConfig: this.config, ...n24 });
  }
};
j([u6], i46.prototype, "simple", 1), j([u6], i46.prototype, "multiAgent", 1);

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-GVHOHNHT.mjs
var n21 = class {
  constructor(t13) {
    this.config = t13;
  }
  async simple(t13) {
    return B4({ aptosConfig: this.config, ...t13 });
  }
  async multiAgent(t13) {
    return B4({ aptosConfig: this.config, ...t13 });
  }
};
j([o12], n21.prototype, "simple", 1), j([o12], n21.prototype, "multiAgent", 1);

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-WK36MJRI.mjs
var h11 = class {
  constructor(n24) {
    this.config = n24, this.build = new o11(this.config), this.simulate = new i46(this.config), this.submit = new n21(this.config), this.batch = new i45(this.config);
  }
  async getTransactions(n24) {
    return F({ aptosConfig: this.config, ...n24 });
  }
  async getTransactionByVersion(n24) {
    return v2({ aptosConfig: this.config, ...n24 });
  }
  async getTransactionByHash(n24) {
    return x2({ aptosConfig: this.config, ...n24 });
  }
  async isPendingTransaction(n24) {
    return N2({ aptosConfig: this.config, ...n24 });
  }
  async waitForTransaction(n24) {
    return G2({ aptosConfig: this.config, ...n24 });
  }
  async getGasPriceEstimation() {
    return L({ aptosConfig: this.config });
  }
  getSigningMessage(n24) {
    return Y(n24);
  }
  async publishPackageTransaction(n24) {
    return nn({ aptosConfig: this.config, ...n24 });
  }
  async rotateAuthKey(n24) {
    return tn2({ aptosConfig: this.config, ...n24 });
  }
  sign(n24) {
    return K2({ ...n24 });
  }
  signAsFeePayer(n24) {
    let { signer: t13, transaction: a13 } = n24;
    if (!a13.feePayerAddress)
      throw new Error(`Transaction ${a13} is not a Fee Payer transaction`);
    return a13.feePayerAddress = t13.accountAddress, K2({ signer: t13, transaction: a13 });
  }
  async batchTransactionsForSingleAccount(n24) {
    try {
      let { sender: t13, data: a13, options: P6 } = n24;
      this.batch.forSingleAccount({ sender: t13, data: a13, options: P6 });
    } catch (t13) {
      throw new Error(`failed to submit transactions with error: ${t13}`);
    }
  }
  async signAndSubmitTransaction(n24) {
    let { signer: t13, transaction: a13 } = n24;
    return M3({ aptosConfig: this.config, signer: t13, transaction: a13 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-CCUD52OF.mjs
var i47 = class {
  constructor(e3) {
    this.network = (e3 == null ? void 0 : e3.network) ?? n5, this.fullnode = e3 == null ? void 0 : e3.fullnode, this.faucet = e3 == null ? void 0 : e3.faucet, this.indexer = e3 == null ? void 0 : e3.indexer, this.client = (e3 == null ? void 0 : e3.client) ?? { provider: aptosClient }, this.clientConfig = (e3 == null ? void 0 : e3.clientConfig) ?? {};
  }
  getRequestUrl(e3) {
    switch (e3) {
      case 0:
        if (this.fullnode !== void 0)
          return this.fullnode;
        if (this.network === "custom")
          throw new Error("Please provide a custom full node url");
        return o10[this.network];
      case 2:
        if (this.faucet !== void 0)
          return this.faucet;
        if (this.network === "custom")
          throw new Error("Please provide a custom faucet url");
        return a11[this.network];
      case 1:
        if (this.indexer !== void 0)
          return this.indexer;
        if (this.network === "custom")
          throw new Error("Please provide a custom indexer url");
        return n18[this.network];
      default:
        throw Error(`apiType ${e3} is not supported`);
    }
  }
  isIndexerRequest(e3) {
    return n18[this.network] === e3;
  }
  isFullnodeRequest(e3) {
    return o10[this.network] === e3;
  }
  isFaucetRequest(e3) {
    return a11[this.network] === e3;
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-6Y3VBRMN.mjs
var u7 = { typeParameters: [{ constraints: [] }], parameters: [new S2(), new p5()] };
async function y7(e3) {
  let { aptosConfig: i48, sender: s12, recipient: c14, amount: a13, coinType: p12, options: m12 } = e3;
  return h10({ aptosConfig: i48, sender: s12, data: { function: "0x1::aptos_account::transfer_coins", typeArguments: [p12 ?? A6], functionArguments: [c14, a13], abi: u7 }, options: m12 });
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-ESX5X52V.mjs
var t11 = class {
  constructor(n24) {
    this.config = n24;
  }
  async transferCoinTransaction(n24) {
    return y7({ aptosConfig: this.config, ...n24 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-INV6U3KS.mjs
var C3 = { BOOLEAN: "bool", U8: "u8", U16: "u16", U32: "u32", U64: "u64", U128: "u128", U256: "u256", ADDRESS: "address", STRING: "0x1::string::String", ARRAY: "vector<u8>" };
var m10 = "0x4::token::Token";
async function Pt(t13) {
  let { aptosConfig: o13, digitalAssetAddress: n24 } = t13, e3 = { token_data_id: { _eq: c.from(n24).toStringLong() } };
  return (await p3({ aptosConfig: o13, query: { query: Q, variables: { where_condition: e3 } }, originMethod: "getDigitalAssetData" })).current_token_datas_v2[0];
}
async function _t(t13) {
  let { aptosConfig: o13, digitalAssetAddress: n24 } = t13, e3 = { token_data_id: { _eq: c.from(n24).toStringLong() } };
  return (await p3({ aptosConfig: o13, query: { query: q, variables: { where_condition: e3 } }, originMethod: "getCurrentDigitalAssetOwnership" })).current_token_ownerships_v2[0];
}
async function kt(t13) {
  let { aptosConfig: o13, ownerAddress: n24, options: e3 } = t13, r23 = { owner_address: { _eq: c.from(n24).toStringLong() }, amount: { _gt: 0 } }, i48 = { query: q, variables: { where_condition: r23, offset: e3 == null ? void 0 : e3.offset, limit: e3 == null ? void 0 : e3.limit, order_by: e3 == null ? void 0 : e3.orderBy } };
  return (await p3({ aptosConfig: o13, query: i48, originMethod: "getOwnedDigitalAssets" })).current_token_ownerships_v2;
}
async function Dt(t13) {
  let { aptosConfig: o13, digitalAssetAddress: n24, options: e3 } = t13, r23 = { token_data_id: { _eq: c.from(n24).toStringLong() } }, i48 = { query: C, variables: { where_condition: r23, offset: e3 == null ? void 0 : e3.offset, limit: e3 == null ? void 0 : e3.limit, order_by: e3 == null ? void 0 : e3.orderBy } };
  return (await p3({ aptosConfig: o13, query: i48, originMethod: "getDigitalAssetActivity" })).token_activities_v2;
}
var U9 = { typeParameters: [], parameters: [new b2(V()), new p5(), new b2(V()), new b2(V()), new c4(), new c4(), new c4(), new c4(), new c4(), new c4(), new c4(), new c4(), new c4(), new p5(), new p5()] };
async function St(t13) {
  let { aptosConfig: o13, options: n24, creator: e3 } = t13;
  return h10({ aptosConfig: o13, sender: e3.accountAddress, data: { function: "0x4::aptos_token::create_collection", functionArguments: [new a3(t13.description), new m6(t13.maxSupply ?? _), new a3(t13.name), new a3(t13.uri), new U3(t13.mutableDescription ?? true), new U3(t13.mutableRoyalty ?? true), new U3(t13.mutableURI ?? true), new U3(t13.mutableTokenDescription ?? true), new U3(t13.mutableTokenName ?? true), new U3(t13.mutableTokenProperties ?? true), new U3(t13.mutableTokenURI ?? true), new U3(t13.tokensBurnableByCreator ?? true), new U3(t13.tokensFreezableByCreator ?? true), new m6(t13.royaltyNumerator ?? 0), new m6(t13.royaltyDenominator ?? 1)], abi: U9 }, options: n24 });
}
async function F3(t13) {
  let { aptosConfig: o13, creatorAddress: n24, collectionName: e3, options: r23 } = t13, i48 = c.from(n24), a13 = { collection_name: { _eq: e3 }, creator_address: { _eq: i48.toStringLong() } };
  return (r23 == null ? void 0 : r23.tokenStandard) && (a13.token_standard = { _eq: (r23 == null ? void 0 : r23.tokenStandard) ?? "v2" }), (await p3({ aptosConfig: o13, query: { query: T, variables: { where_condition: a13 } }, originMethod: "getCollectionData" })).current_collections_v2[0];
}
async function vt(t13) {
  return (await F3(t13)).collection_id;
}
var Q3 = { typeParameters: [], parameters: [new b2(V()), new b2(V()), new b2(V()), new b2(V()), new y2(new b2(V())), new y2(new b2(V())), new y2(y2.u8())] };
async function xt(t13) {
  let { aptosConfig: o13, options: n24, creator: e3, collection: r23, description: i48, name: a13, uri: l12, propertyKeys: y10, propertyTypes: _5, propertyValues: P6 } = t13, k3 = _5 == null ? void 0 : _5.map((D8) => C3[D8]);
  return h10({ aptosConfig: o13, sender: e3.accountAddress, data: { function: "0x4::aptos_token::mint", functionArguments: [new a3(r23), new a3(i48), new a3(a13), new a3(l12), t6.MoveString(y10 ?? []), t6.MoveString(k3 ?? []), K3(P6 ?? [], k3 ?? [])], abi: Q3 }, options: n24 });
}
var N6 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0))), new S2()] };
async function ht(t13) {
  let { aptosConfig: o13, sender: n24, digitalAssetAddress: e3, recipient: r23, digitalAssetType: i48, options: a13 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x1::object::transfer", typeArguments: [i48 ?? m10], functionArguments: [c.from(e3), c.from(r23)], abi: N6 }, options: a13 });
}
var Y2 = { typeParameters: [], parameters: [new b2(V()), new b2(V()), new b2(V()), new b2(V()), new y2(new b2(V())), new y2(new b2(V())), new y2(y2.u8()), new S2()] };
async function Gt(t13) {
  let { aptosConfig: o13, account: n24, collection: e3, description: r23, name: i48, uri: a13, recipient: l12, propertyKeys: y10, propertyTypes: _5, propertyValues: P6, options: k3 } = t13;
  if ((y10 == null ? void 0 : y10.length) !== (P6 == null ? void 0 : P6.length))
    throw new Error("Property keys and property values counts do not match");
  if ((_5 == null ? void 0 : _5.length) !== (P6 == null ? void 0 : P6.length))
    throw new Error("Property types and property values counts do not match");
  let D8 = _5 == null ? void 0 : _5.map((R4) => C3[R4]);
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::mint_soul_bound", functionArguments: [e3, r23, i48, a13, t6.MoveString(y10 ?? []), t6.MoveString(D8 ?? []), K3(P6 ?? [], D8 ?? []), l12], abi: Y2 }, options: k3 });
}
var z3 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0)))] };
async function Bt(t13) {
  let { aptosConfig: o13, creator: n24, digitalAssetAddress: e3, digitalAssetType: r23, options: i48 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::burn", typeArguments: [r23 ?? m10], functionArguments: [c.from(e3)], abi: z3 }, options: i48 });
}
var L3 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0)))] };
async function Ot(t13) {
  let { aptosConfig: o13, creator: n24, digitalAssetAddress: e3, digitalAssetType: r23, options: i48 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::freeze_transfer", typeArguments: [r23 ?? m10], functionArguments: [e3], abi: L3 }, options: i48 });
}
var j3 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0)))] };
async function Et(t13) {
  let { aptosConfig: o13, creator: n24, digitalAssetAddress: e3, digitalAssetType: r23, options: i48 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::unfreeze_transfer", typeArguments: [r23 ?? m10], functionArguments: [e3], abi: j3 }, options: i48 });
}
var X2 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0))), new b2(V())] };
async function Vt(t13) {
  let { aptosConfig: o13, creator: n24, description: e3, digitalAssetAddress: r23, digitalAssetType: i48, options: a13 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::set_description", typeArguments: [i48 ?? m10], functionArguments: [c.from(r23), new a3(e3)], abi: X2 }, options: a13 });
}
var H = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0))), new b2(V())] };
async function Mt(t13) {
  let { aptosConfig: o13, creator: n24, name: e3, digitalAssetAddress: r23, digitalAssetType: i48, options: a13 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::set_name", typeArguments: [i48 ?? m10], functionArguments: [c.from(r23), new a3(e3)], abi: H }, options: a13 });
}
var J = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0))), new b2(V())] };
async function qt(t13) {
  let { aptosConfig: o13, creator: n24, uri: e3, digitalAssetAddress: r23, digitalAssetType: i48, options: a13 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::set_uri", typeArguments: [i48 ?? m10], functionArguments: [c.from(r23), new a3(e3)], abi: J }, options: a13 });
}
var W2 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0))), new b2(V()), new b2(V()), y2.u8()] };
async function Kt(t13) {
  let { aptosConfig: o13, creator: n24, propertyKey: e3, propertyType: r23, propertyValue: i48, digitalAssetAddress: a13, digitalAssetType: l12, options: y10 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::add_property", typeArguments: [l12 ?? m10], functionArguments: [c.from(a13), new a3(e3), new a3(C3[r23]), t6.U8(G7(i48, C3[r23]))], abi: W2 }, options: y10 });
}
var Z3 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0))), new b2(V())] };
async function Rt(t13) {
  let { aptosConfig: o13, creator: n24, propertyKey: e3, digitalAssetAddress: r23, digitalAssetType: i48, options: a13 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::remove_property", typeArguments: [i48 ?? m10], functionArguments: [c.from(r23), new a3(e3)], abi: Z3 }, options: a13 });
}
var $5 = { typeParameters: [{ constraints: ["key"] }], parameters: [new b2(G3(new h5(0))), new b2(V()), new b2(V()), y2.u8()] };
async function Ut(t13) {
  let { aptosConfig: o13, creator: n24, propertyKey: e3, propertyType: r23, propertyValue: i48, digitalAssetAddress: a13, digitalAssetType: l12, options: y10 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::update_property", typeArguments: [l12 ?? m10], functionArguments: [c.from(a13), new a3(e3), new a3(C3[r23]), G7(i48, C3[r23])], abi: $5 }, options: y10 });
}
var tt = { typeParameters: [{ constraints: ["key"] }, { constraints: [] }], parameters: [new b2(G3(new h5(0))), new b2(V()), new h5(1)] };
async function Ft(t13) {
  let { aptosConfig: o13, creator: n24, propertyKey: e3, propertyType: r23, propertyValue: i48, digitalAssetAddress: a13, digitalAssetType: l12, options: y10 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::add_typed_property", typeArguments: [l12 ?? m10, C3[r23]], functionArguments: [c.from(a13), new a3(e3), i48], abi: tt }, options: y10 });
}
var et = { typeParameters: [{ constraints: ["key"] }, { constraints: [] }], parameters: [new b2(G3(new h5(0))), new b2(V()), new h5(1)] };
async function Qt(t13) {
  let { aptosConfig: o13, creator: n24, propertyKey: e3, propertyType: r23, propertyValue: i48, digitalAssetAddress: a13, digitalAssetType: l12, options: y10 } = t13;
  return h10({ aptosConfig: o13, sender: n24.accountAddress, data: { function: "0x4::aptos_token::update_typed_property", typeArguments: [l12 ?? m10, C3[r23]], functionArguments: [c.from(a13), new a3(e3), i48], abi: et }, options: y10 });
}
function K3(t13, o13) {
  let n24 = new Array();
  return o13.forEach((e3, r23) => {
    n24.push(G7(t13[r23], e3));
  }), n24;
}
function G7(t13, o13) {
  let n24 = Z(o13);
  return U6(t13, n24, 0, []).bcsToBytes();
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-4SAUEZTN.mjs
var D6 = class {
  constructor(t13) {
    this.config = t13;
  }
  async getCollectionData(t13) {
    return await i5({ config: this.config, minimumLedgerVersion: t13.minimumLedgerVersion, processorType: "token_v2_processor" }), F3({ aptosConfig: this.config, ...t13 });
  }
  async getCollectionId(t13) {
    return await i5({ config: this.config, minimumLedgerVersion: t13.minimumLedgerVersion, processorType: "token_v2_processor" }), vt({ aptosConfig: this.config, ...t13 });
  }
  async getDigitalAssetData(t13) {
    return await i5({ config: this.config, minimumLedgerVersion: t13.minimumLedgerVersion, processorType: "token_v2_processor" }), Pt({ aptosConfig: this.config, ...t13 });
  }
  async getCurrentDigitalAssetOwnership(t13) {
    return await i5({ config: this.config, minimumLedgerVersion: t13.minimumLedgerVersion, processorType: "token_v2_processor" }), _t({ aptosConfig: this.config, ...t13 });
  }
  async getOwnedDigitalAssets(t13) {
    return await i5({ config: this.config, minimumLedgerVersion: t13.minimumLedgerVersion, processorType: "token_v2_processor" }), kt({ aptosConfig: this.config, ...t13 });
  }
  async getDigitalAssetActivity(t13) {
    return await i5({ config: this.config, minimumLedgerVersion: t13.minimumLedgerVersion, processorType: "token_v2_processor" }), Dt({ aptosConfig: this.config, ...t13 });
  }
  async createCollectionTransaction(t13) {
    return St({ aptosConfig: this.config, ...t13 });
  }
  async mintDigitalAssetTransaction(t13) {
    return xt({ aptosConfig: this.config, ...t13 });
  }
  async transferDigitalAssetTransaction(t13) {
    return ht({ aptosConfig: this.config, ...t13 });
  }
  async mintSoulBoundTransaction(t13) {
    return Gt({ aptosConfig: this.config, ...t13 });
  }
  async burnDigitalAssetTransaction(t13) {
    return Bt({ aptosConfig: this.config, ...t13 });
  }
  async freezeDigitalAssetTransaferTransaction(t13) {
    return Ot({ aptosConfig: this.config, ...t13 });
  }
  async unfreezeDigitalAssetTransaferTransaction(t13) {
    return Et({ aptosConfig: this.config, ...t13 });
  }
  async setDigitalAssetDescriptionTransaction(t13) {
    return Vt({ aptosConfig: this.config, ...t13 });
  }
  async setDigitalAssetNameTransaction(t13) {
    return Mt({ aptosConfig: this.config, ...t13 });
  }
  async setDigitalAssetURITransaction(t13) {
    return qt({ aptosConfig: this.config, ...t13 });
  }
  async addDigitalAssetPropertyTransaction(t13) {
    return Kt({ aptosConfig: this.config, ...t13 });
  }
  async removeDigitalAssetPropertyTransaction(t13) {
    return Rt({ aptosConfig: this.config, ...t13 });
  }
  async updateDigitalAssetPropertyTransaction(t13) {
    return Ut({ aptosConfig: this.config, ...t13 });
  }
  async addDigitalAssetTypedPropertyTransaction(t13) {
    return Ft({ aptosConfig: this.config, ...t13 });
  }
  async updateDigitalAssetTypedPropertyTransaction(t13) {
    return Qt({ aptosConfig: this.config, ...t13 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-AA3GRJNL.mjs
async function f11(t13) {
  let { accountAddress: n24, aptosConfig: e3, creationNumber: s12, options: o13 } = t13, r23 = { where: { account_address: { _eq: c.from(n24).toStringLong() }, creation_number: { _eq: s12 } }, pagination: o13, orderBy: o13 == null ? void 0 : o13.orderBy };
  return c11({ aptosConfig: e3, options: r23 });
}
async function v6(t13) {
  let { accountAddress: n24, aptosConfig: e3, eventType: s12, options: o13 } = t13, r23 = { where: { account_address: { _eq: c.from(n24).toStringLong() }, indexed_type: { _eq: s12 } }, pagination: o13, orderBy: o13 == null ? void 0 : o13.orderBy };
  return c11({ aptosConfig: e3, options: r23 });
}
async function c11(t13) {
  let { aptosConfig: n24, options: e3 } = t13, s12 = { query: f, variables: { where_condition: e3 == null ? void 0 : e3.where, offset: e3 == null ? void 0 : e3.offset, limit: e3 == null ? void 0 : e3.limit, order_by: e3 == null ? void 0 : e3.orderBy } };
  return (await p3({ aptosConfig: n24, query: s12, originMethod: "getEvents" })).events;
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-ZIZ7PVK2.mjs
var s11 = class {
  constructor(e3) {
    this.config = e3;
  }
  async getAccountEventsByCreationNumber(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "events_processor" }), f11({ aptosConfig: this.config, ...e3 });
  }
  async getAccountEventsByEventType(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "events_processor" }), v6({ aptosConfig: this.config, ...e3 });
  }
  async getEvents(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "events_processor" }), c11({ aptosConfig: this.config, ...e3 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-UJAX75ON.mjs
async function x5(a13) {
  let { aptosConfig: t13, accountAddress: i48, amount: p12, options: n24 } = a13, u10 = (n24 == null ? void 0 : n24.timeoutSecs) || T4, { data: d9 } = await x({ aptosConfig: t13, path: "fund", body: { address: c.from(i48).toString(), amount: p12 }, originMethod: "fundAccount" }), m12 = d9.txn_hashes[0], o13 = await G2({ aptosConfig: t13, transactionHash: m12, options: { timeoutSecs: u10, checkSuccess: n24 == null ? void 0 : n24.checkSuccess } });
  if (o13.type === "user_transaction")
    return o13;
  throw new Error(`Unexpected transaction received for fund account: ${o13.type}`);
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-Q7JKS6WV.mjs
var r21 = class {
  constructor(o13) {
    this.config = o13;
  }
  async fundAccount(o13) {
    var _a;
    let n24 = await x5({ aptosConfig: this.config, ...o13 });
    return ((_a = o13.options) == null ? void 0 : _a.waitForIndexer) !== false && await D({ aptosConfig: this.config, minimumLedgerVersion: BigInt(n24.version) }), n24;
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-TVURQPLA.mjs
async function h12(t13) {
  let { aptosConfig: s12, options: e3 } = t13, n24 = { query: h3, variables: { where_condition: e3 == null ? void 0 : e3.where, limit: e3 == null ? void 0 : e3.limit, offset: e3 == null ? void 0 : e3.offset } };
  return (await p3({ aptosConfig: s12, query: n24, originMethod: "getFungibleAssetMetadata" })).fungible_asset_metadata;
}
async function M4(t13) {
  let { aptosConfig: s12, options: e3 } = t13, n24 = { query: v, variables: { where_condition: e3 == null ? void 0 : e3.where, limit: e3 == null ? void 0 : e3.limit, offset: e3 == null ? void 0 : e3.offset } };
  return (await p3({ aptosConfig: s12, query: n24, originMethod: "getFungibleAssetActivities" })).fungible_asset_activities;
}
async function x6(t13) {
  let { aptosConfig: s12, options: e3 } = t13, n24 = { query: k, variables: { where_condition: e3 == null ? void 0 : e3.where, limit: e3 == null ? void 0 : e3.limit, offset: e3 == null ? void 0 : e3.offset } };
  return (await p3({ aptosConfig: s12, query: n24, originMethod: "getCurrentFungibleAssetBalances" })).current_fungible_asset_balances;
}
var b6 = { typeParameters: [], parameters: [Z("0x1::object::Object"), new S2(), new p5()] };
async function v7(t13) {
  let { aptosConfig: s12, sender: e3, fungibleAssetMetadataAddress: n24, recipient: i48, amount: p12, options: f13 } = t13;
  return h10({ aptosConfig: s12, sender: e3.accountAddress, data: { function: "0x1::primary_fungible_store::transfer", typeArguments: ["0x1::fungible_asset::Metadata"], functionArguments: [n24, i48, p12], abi: b6 }, options: f13 });
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-C7ZX475J.mjs
var r22 = class {
  constructor(e3) {
    this.config = e3;
  }
  async getFungibleAssetMetadata(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "fungible_asset_processor" }), h12({ aptosConfig: this.config, ...e3 });
  }
  async getFungibleAssetMetadataByAssetType(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "fungible_asset_processor" }), (await h12({ aptosConfig: this.config, options: { where: { asset_type: { _eq: e3.assetType } } } }))[0];
  }
  async getFungibleAssetActivities(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "fungible_asset_processor" }), M4({ aptosConfig: this.config, ...e3 });
  }
  async getCurrentFungibleAssetBalances(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3 == null ? void 0 : e3.minimumLedgerVersion, processorType: "fungible_asset_processor" }), x6({ aptosConfig: this.config, ...e3 });
  }
  async transferFungibleAsset(e3) {
    return v7({ aptosConfig: this.config, ...e3 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-ZFPA45OK.mjs
var u8 = class {
  constructor(e3) {
    this.config = e3;
  }
  async getLedgerInfo() {
    return l4({ aptosConfig: this.config });
  }
  async getChainId() {
    return (await this.getLedgerInfo()).chain_id;
  }
  async getBlockByVersion(e3) {
    return h4({ aptosConfig: this.config, ...e3 });
  }
  async getBlockByHeight(e3) {
    return m2({ aptosConfig: this.config, ...e3 });
  }
  async getTableItem(e3) {
    return C2({ aptosConfig: this.config, ...e3 });
  }
  async view(e3) {
    return T3({ aptosConfig: this.config, ...e3 });
  }
  async getChainTopUserTransactions(e3) {
    return q2({ aptosConfig: this.config, ...e3 });
  }
  async queryIndexer(e3) {
    return p3({ aptosConfig: this.config, ...e3 });
  }
  async getIndexerLastSuccessVersion() {
    return w3({ aptosConfig: this.config });
  }
  async getProcessorStatus(e3) {
    return A4({ aptosConfig: this.config, processorType: e3 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-WQI2RH2S.mjs
var l10 = class {
  constructor(e3) {
    this.config = e3;
  }
  async getAccountInfo(e3) {
    return M2({ aptosConfig: this.config, ...e3 });
  }
  async getAccountModules(e3) {
    return io({ aptosConfig: this.config, ...e3 });
  }
  async getAccountModule(e3) {
    return uo({ aptosConfig: this.config, ...e3 });
  }
  async getAccountTransactions(e3) {
    return go({ aptosConfig: this.config, ...e3 });
  }
  async getAccountResources(e3) {
    return Ao({ aptosConfig: this.config, ...e3 });
  }
  async getAccountResource(e3) {
    return K({ aptosConfig: this.config, ...e3 });
  }
  async lookupOriginalAccountAddress(e3) {
    return Q2({ aptosConfig: this.config, ...e3 });
  }
  async getAccountTokensCount(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "account_transactions_processor" }), po({ aptosConfig: this.config, ...e3 });
  }
  async getAccountOwnedTokens(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "token_v2_processor" }), fo({ aptosConfig: this.config, ...e3 });
  }
  async getAccountOwnedTokensFromCollectionAddress(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "token_v2_processor" }), lo({ aptosConfig: this.config, ...e3 });
  }
  async getAccountCollectionsWithOwnedTokens(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "token_v2_processor" }), yo({ aptosConfig: this.config, ...e3 });
  }
  async getAccountTransactionsCount(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "account_transactions_processor" }), mo({ aptosConfig: this.config, ...e3 });
  }
  async getAccountCoinsData(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "fungible_asset_processor" }), I2({ aptosConfig: this.config, ...e3 });
  }
  async getAccountCoinsCount(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "fungible_asset_processor" }), Co({ aptosConfig: this.config, ...e3 });
  }
  async getAccountAPTAmount(e3) {
    return this.getAccountCoinAmount({ coinType: A6, ...e3 });
  }
  async getAccountCoinAmount(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "fungible_asset_processor" }), _o({ aptosConfig: this.config, ...e3 });
  }
  async getAccountOwnedObjects(e3) {
    return await i5({ config: this.config, minimumLedgerVersion: e3.minimumLedgerVersion, processorType: "default_processor" }), ho({ aptosConfig: this.config, ...e3 });
  }
  async deriveAccountFromPrivateKey(e3) {
    return wo({ aptosConfig: this.config, ...e3 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-3NOQE6U3.mjs
var E4 = ["A name must be between 3 and 63 characters long,", "and can only contain lowercase a-z, 0-9, and hyphens.", "A name may not start or end with a hyphen."].join(" ");
function D7(e3) {
  return !(!e3 || e3.length < 3 || e3.length > 63 || !/^[a-z\d][a-z\d-]{1,61}[a-z\d]$/.test(e3));
}
function c12(e3) {
  let [n24, t13, ...o13] = e3.replace(/\.apt$/, "").split(".");
  if (o13.length > 0)
    throw new Error(`${e3} is invalid. A name can only have two parts, a domain and a subdomain separated by a "."`);
  if (!D7(n24))
    throw new Error(`${n24} is not valid. ${E4}`);
  if (t13 && !D7(t13))
    throw new Error(`${t13} is not valid. ${E4}`);
  return { domainName: t13 || n24, subdomainName: t13 ? n24 : void 0 };
}
var G8 = "0x585fc9f0f0c54183b039ffc770ca282ebd87307916c215a3e692f2f8e4305e82";
var O = { testnet: "0x5f8fd2347449685cf41d4db97926ec3a096eaf381332be4f1318ad4d16a8497c", mainnet: "0x867ed1f6bf916171b1de3ee92849b8978b7d1b9e0a8cc982a3d19d535dfd9c0c", local: G8, custom: null, devnet: null, randomnet: null };
function d7(e3) {
  let n24 = O[e3.network];
  if (!n24)
    throw new Error(`The ANS contract is not deployed to ${e3.network}`);
  return n24;
}
var P4 = (e3) => ({ vec: [e3] });
var I4 = () => ({ vec: [] });
var S6 = (e3) => e3 != null ? P4(e3) : I4();
var b7 = (e3) => {
  if (e3 && typeof e3 == "object" && "vec" in e3 && Array.isArray(e3.vec))
    return e3.vec[0];
};
async function K4(e3) {
  let { aptosConfig: n24, name: t13 } = e3, o13 = d7(n24), { domainName: r23, subdomainName: s12 } = c12(t13), i48 = await T3({ aptosConfig: n24, payload: { function: `${o13}::router::get_owner_addr`, functionArguments: [r23, S6(s12)] } }), a13 = b7(i48[0]);
  return a13 ? c.from(a13).toString() : void 0;
}
async function W3(e3) {
  let { aptosConfig: n24, expiration: t13, name: o13, sender: r23, targetAddress: s12, toAddress: i48, options: a13, transferable: m12 } = e3, p12 = d7(n24), { domainName: l12, subdomainName: N7 } = c12(o13), x8 = t13.policy === "subdomain:independent" || t13.policy === "subdomain:follow-domain";
  if (N7 && !x8)
    throw new Error("Subdomains must have an expiration policy of either 'subdomain:independent' or 'subdomain:follow-domain'");
  if (x8 && !N7)
    throw new Error(`Policy is set to ${t13.policy} but no subdomain was provided`);
  if (t13.policy === "domain") {
    let T10 = t13.years ?? 1;
    if (T10 !== 1)
      throw new Error("For now, names can only be registered for 1 year at a time");
    let v9 = T10 * 31536e3;
    return await h10({ aptosConfig: n24, sender: r23.accountAddress.toString(), data: { function: `${p12}::router::register_domain`, functionArguments: [l12, v9, s12, i48] }, options: a13 });
  }
  if (!N7)
    throw new Error(`${t13.policy} requires a subdomain to be provided.`);
  let _5 = await q3({ aptosConfig: n24, name: l12 });
  if (!_5)
    throw new Error("The domain does not exist");
  let h14 = t13.policy === "subdomain:independent" ? t13.expirationDate : _5;
  if (h14 > _5)
    throw new Error("The subdomain expiration time cannot be greater than the domain expiration time");
  return await h10({ aptosConfig: n24, sender: r23.accountAddress.toString(), data: { function: `${p12}::router::register_subdomain`, functionArguments: [l12, N7, Math.round(h14 / 1e3), t13.policy === "subdomain:follow-domain" ? 1 : 0, !!m12, s12, i48] }, options: a13 });
}
async function q3(e3) {
  let { aptosConfig: n24, name: t13 } = e3, o13 = d7(n24), { domainName: r23, subdomainName: s12 } = c12(t13);
  try {
    let i48 = await T3({ aptosConfig: n24, payload: { function: `${o13}::router::get_expiration`, functionArguments: [r23, S6(s12)] } });
    return Number(i48[0]) * 1e3;
  } catch {
    return;
  }
}
async function F4(e3) {
  let { aptosConfig: n24, address: t13 } = e3, o13 = d7(n24), r23 = await T3({ aptosConfig: n24, payload: { function: `${o13}::router::get_primary_name`, functionArguments: [c.from(t13).toString()] } }), s12 = b7(r23[1]), i48 = b7(r23[0]);
  if (s12)
    return [i48, s12].filter(Boolean).join(".");
}
async function H2(e3) {
  let { aptosConfig: n24, sender: t13, name: o13, options: r23 } = e3, s12 = d7(n24);
  if (!o13)
    return await h10({ aptosConfig: n24, sender: t13.accountAddress.toString(), data: { function: `${s12}::router::clear_primary_name`, functionArguments: [] }, options: r23 });
  let { domainName: i48, subdomainName: a13 } = c12(o13);
  return await h10({ aptosConfig: n24, sender: t13.accountAddress.toString(), data: { function: `${s12}::router::set_primary_name`, functionArguments: [i48, a13] }, options: r23 });
}
async function J2(e3) {
  let { aptosConfig: n24, name: t13 } = e3, o13 = d7(n24), { domainName: r23, subdomainName: s12 } = c12(t13), i48 = await T3({ aptosConfig: n24, payload: { function: `${o13}::router::get_target_addr`, functionArguments: [r23, S6(s12)] } }), a13 = b7(i48[0]);
  return a13 ? c.from(a13).toString() : void 0;
}
async function X3(e3) {
  let { aptosConfig: n24, sender: t13, name: o13, address: r23, options: s12 } = e3, i48 = d7(n24), { domainName: a13, subdomainName: m12 } = c12(o13);
  return await h10({ aptosConfig: n24, sender: t13.accountAddress.toString(), data: { function: `${i48}::router::set_target_addr`, functionArguments: [a13, m12, r23] }, options: s12 });
}
async function Z4(e3) {
  let { aptosConfig: n24, name: t13 } = e3, { domainName: o13, subdomainName: r23 = "" } = c12(t13), a13 = (await p3({ aptosConfig: n24, query: { query: A2, variables: { where_condition: { domain: { _eq: o13 }, subdomain: { _eq: r23 } }, limit: 1 } }, originMethod: "getName" })).current_aptos_names[0];
  return a13 && (a13 = y8(a13)), a13;
}
async function ee(e3) {
  var _a;
  let { aptosConfig: n24, options: t13, accountAddress: o13 } = e3, r23 = await C4({ aptosConfig: n24 });
  return (await p3({ aptosConfig: n24, originMethod: "getAccountNames", query: { query: A2, variables: { limit: t13 == null ? void 0 : t13.limit, offset: t13 == null ? void 0 : t13.offset, order_by: t13 == null ? void 0 : t13.orderBy, where_condition: { ...((_a = e3.options) == null ? void 0 : _a.where) ?? {}, owner_address: { _eq: o13.toString() }, expiration_timestamp: { _gte: r23 } } } } })).current_aptos_names.map(y8);
}
async function ne(e3) {
  var _a;
  let { aptosConfig: n24, options: t13, accountAddress: o13 } = e3, r23 = await C4({ aptosConfig: n24 });
  return (await p3({ aptosConfig: n24, originMethod: "getAccountDomains", query: { query: A2, variables: { limit: t13 == null ? void 0 : t13.limit, offset: t13 == null ? void 0 : t13.offset, order_by: t13 == null ? void 0 : t13.orderBy, where_condition: { ...((_a = e3.options) == null ? void 0 : _a.where) ?? {}, owner_address: { _eq: o13.toString() }, expiration_timestamp: { _gte: r23 }, subdomain: { _eq: "" } } } } })).current_aptos_names.map(y8);
}
async function te(e3) {
  var _a;
  let { aptosConfig: n24, options: t13, accountAddress: o13 } = e3, r23 = await C4({ aptosConfig: n24 });
  return (await p3({ aptosConfig: n24, originMethod: "getAccountSubdomains", query: { query: A2, variables: { limit: t13 == null ? void 0 : t13.limit, offset: t13 == null ? void 0 : t13.offset, order_by: t13 == null ? void 0 : t13.orderBy, where_condition: { ...((_a = e3.options) == null ? void 0 : _a.where) ?? {}, owner_address: { _eq: o13.toString() }, expiration_timestamp: { _gte: r23 }, subdomain: { _neq: "" } } } } })).current_aptos_names.map(y8);
}
async function oe(e3) {
  var _a;
  let { aptosConfig: n24, options: t13, domain: o13 } = e3;
  return (await p3({ aptosConfig: n24, originMethod: "getDomainSubdomains", query: { query: A2, variables: { limit: t13 == null ? void 0 : t13.limit, offset: t13 == null ? void 0 : t13.offset, order_by: t13 == null ? void 0 : t13.orderBy, where_condition: { ...((_a = e3.options) == null ? void 0 : _a.where) ?? {}, domain: { _eq: o13 }, subdomain: { _neq: "" } } } } })).current_aptos_names.map(y8);
}
async function C4(e3) {
  let { aptosConfig: n24 } = e3, t13 = d7(n24), [o13] = await T3({ aptosConfig: n24, payload: { function: `${t13}::config::reregistration_grace_sec`, functionArguments: [] } }), r23 = o13 / 60 / 60 / 24, s12 = () => /* @__PURE__ */ new Date();
  return new Date(s12().setDate(s12().getDate() - r23)).toISOString();
}
async function re(e3) {
  let { aptosConfig: n24, sender: t13, name: o13, years: r23 = 1, options: s12 } = e3, i48 = d7(n24), a13 = r23 * 31536e3, { domainName: m12, subdomainName: p12 } = c12(o13);
  if (p12)
    throw new Error("Subdomains cannot be renewed");
  if (r23 !== 1)
    throw new Error("Currently, only 1 year renewals are supported");
  return await h10({ aptosConfig: n24, sender: t13.accountAddress.toString(), data: { function: `${i48}::router::renew_domain`, functionArguments: [m12, a13] }, options: s12 });
}
function y8(e3) {
  return { ...e3, expiration_timestamp: new Date(e3.expiration_timestamp).valueOf() };
}

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-5WXR2O3T.mjs
var A11 = class {
  constructor(e3) {
    this.config = e3;
  }
  async getOwnerAddress(e3) {
    return K4({ aptosConfig: this.config, ...e3 });
  }
  async getExpiration(e3) {
    return q3({ aptosConfig: this.config, ...e3 });
  }
  async getTargetAddress(e3) {
    return J2({ aptosConfig: this.config, ...e3 });
  }
  async setTargetAddress(e3) {
    return X3({ aptosConfig: this.config, ...e3 });
  }
  async getPrimaryName(e3) {
    return F4({ aptosConfig: this.config, ...e3 });
  }
  async setPrimaryName(e3) {
    return H2({ aptosConfig: this.config, ...e3 });
  }
  async registerName(e3) {
    return W3({ aptosConfig: this.config, ...e3 });
  }
  async renewDomain(e3) {
    return re({ aptosConfig: this.config, ...e3 });
  }
  async getName(e3) {
    return Z4({ aptosConfig: this.config, ...e3 });
  }
  async getAccountNames(e3) {
    return ee({ aptosConfig: this.config, ...e3 });
  }
  async getAccountDomains(e3) {
    return ne({ aptosConfig: this.config, ...e3 });
  }
  async getAccountSubdomains(e3) {
    return te({ aptosConfig: this.config, ...e3 });
  }
  async getDomainSubdomains(e3) {
    return oe({ aptosConfig: this.config, ...e3 });
  }
};

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-5L6SRCJP.mjs
var t12 = class {
  constructor(i48) {
    this.config = new i47(i48), this.account = new l10(this.config), this.ans = new A11(this.config), this.coin = new t11(this.config), this.digitalAsset = new D6(this.config), this.event = new s11(this.config), this.faucet = new r21(this.config), this.fungibleAsset = new r22(this.config), this.general = new u8(this.config), this.staking = new t3(this.config), this.transaction = new h11(this.config);
  }
};
function n22(m12, i48, A13) {
  Object.getOwnPropertyNames(i48.prototype).forEach((e3) => {
    let o13 = Object.getOwnPropertyDescriptor(i48.prototype, e3);
    o13 && (o13.value = function(...d9) {
      return this[A13][e3](...d9);
    }, Object.defineProperty(m12.prototype, e3, o13));
  });
}
n22(t12, l10, "account");
n22(t12, A11, "ans");
n22(t12, t11, "coin");
n22(t12, D6, "digitalAsset");
n22(t12, s11, "event");
n22(t12, r21, "faucet");
n22(t12, r22, "fungibleAsset");
n22(t12, u8, "general");
n22(t12, t3, "staking");
n22(t12, h11, "transaction");

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-ALFESCPU.mjs
var p11 = ((i48) => (i48.JSON = "application/json", i48.BCS = "application/x-bcs", i48.BCS_SIGNED_TRANSACTION = "application/x.aptos.signed_transaction+bcs", i48))(p11 || {});
var a12 = ((t13) => (t13[t13.Bool = 0] = "Bool", t13[t13.U8 = 1] = "U8", t13[t13.U64 = 2] = "U64", t13[t13.U128 = 3] = "U128", t13[t13.Address = 4] = "Address", t13[t13.Signer = 5] = "Signer", t13[t13.Vector = 6] = "Vector", t13[t13.Struct = 7] = "Struct", t13[t13.U16 = 8] = "U16", t13[t13.U32 = 9] = "U32", t13[t13.U256 = 10] = "U256", t13[t13.Reference = 254] = "Reference", t13[t13.Generic = 255] = "Generic", t13))(a12 || {});
var g8 = ((o13) => (o13[o13.U8 = 0] = "U8", o13[o13.U64 = 1] = "U64", o13[o13.U128 = 2] = "U128", o13[o13.Address = 3] = "Address", o13[o13.U8Vector = 4] = "U8Vector", o13[o13.Bool = 5] = "Bool", o13[o13.U16 = 6] = "U16", o13[o13.U32 = 7] = "U32", o13[o13.U256 = 8] = "U256", o13))(g8 || {});
var y9 = ((i48) => (i48[i48.Script = 0] = "Script", i48[i48.EntryFunction = 2] = "EntryFunction", i48[i48.Multisig = 3] = "Multisig", i48))(y9 || {});
var u9 = ((r23) => (r23[r23.MultiAgentTransaction = 0] = "MultiAgentTransaction", r23[r23.FeePayerTransaction = 1] = "FeePayerTransaction", r23))(u9 || {});
var d8 = ((e3) => (e3[e3.Ed25519 = 0] = "Ed25519", e3[e3.MultiEd25519 = 1] = "MultiEd25519", e3[e3.MultiAgent = 2] = "MultiAgent", e3[e3.FeePayer = 3] = "FeePayer", e3[e3.SingleSender = 4] = "SingleSender", e3))(d8 || {});
var c13 = ((n24) => (n24[n24.Ed25519 = 0] = "Ed25519", n24[n24.MultiEd25519 = 1] = "MultiEd25519", n24[n24.SingleKey = 2] = "SingleKey", n24[n24.MultiKey = 3] = "MultiKey", n24))(c13 || {});
var l11 = ((r23) => (r23[r23.Ed25519 = 0] = "Ed25519", r23[r23.Secp256k1 = 1] = "Secp256k1", r23))(l11 || {});
var _4 = ((r23) => (r23[r23.Ed25519 = 0] = "Ed25519", r23[r23.Secp256k1 = 1] = "Secp256k1", r23))(_4 || {});
var x7 = ((e3) => (e3.Pending = "pending_transaction", e3.User = "user_transaction", e3.Genesis = "genesis_transaction", e3.BlockMetadata = "block_metadata_transaction", e3.StateCheckpoint = "state_checkpoint_transaction", e3))(x7 || {});
function b8(s12) {
  return s12.type === "pending_transaction";
}
function k2(s12) {
  return s12.type === "user_transaction";
}
function f12(s12) {
  return s12.type === "genesis_transaction";
}
function E5(s12) {
  return s12.type === "block_metadata_transaction";
}
function C5(s12) {
  return s12.type === "state_checkpoint_transaction";
}
function U10(s12) {
  return "signature" in s12 && s12.signature === "ed25519_signature";
}
function T9(s12) {
  return "signature" in s12 && s12.signature === "secp256k1_ecdsa_signature";
}
function A12(s12) {
  return s12.type === "multi_agent_signature";
}
function W4(s12) {
  return s12.type === "fee_payer_signature";
}
function P5(s12) {
  return s12.type === "multi_ed25519_signature";
}
var v8 = ((i48) => (i48.PRIVATE = "private", i48.PUBLIC = "public", i48.FRIEND = "friend", i48))(v8 || {});
var M5 = ((n24) => (n24.STORE = "store", n24.DROP = "drop", n24.KEY = "key", n24.COPY = "copy", n24))(M5 || {});
var h13 = ((r23) => (r23.VALIDATOR = "validator", r23.FULL_NODE = "full_node", r23))(h13 || {});
var m11 = ((n24) => (n24[n24.Ed25519 = 0] = "Ed25519", n24[n24.MultiEd25519 = 1] = "MultiEd25519", n24[n24.SingleKey = 2] = "SingleKey", n24[n24.MultiKey = 3] = "MultiKey", n24))(m11 || {});
var R3 = ((r23) => (r23[r23.Ed25519 = 0] = "Ed25519", r23[r23.Secp256k1Ecdsa = 2] = "Secp256k1Ecdsa", r23))(R3 || {});
var S7 = ((e3) => (e3[e3.DeriveAuid = 251] = "DeriveAuid", e3[e3.DeriveObjectAddressFromObject = 252] = "DeriveObjectAddressFromObject", e3[e3.DeriveObjectAddressFromGuid = 253] = "DeriveObjectAddressFromGuid", e3[e3.DeriveObjectAddressFromSeed = 254] = "DeriveObjectAddressFromSeed", e3[e3.DeriveResourceAccountAddress = 255] = "DeriveResourceAccountAddress", e3))(S7 || {});

// node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-6IFMQ5AS.mjs
var n23 = class {
  constructor(e3) {
    this.buffer = new ArrayBuffer(e3.length), new Uint8Array(this.buffer).set(e3, 0), this.offset = 0;
  }
  read(e3) {
    if (this.offset + e3 > this.buffer.byteLength)
      throw new Error("Reached to the end of buffer");
    let i48 = this.buffer.slice(this.offset, this.offset + e3);
    return this.offset += e3, i48;
  }
  deserializeStr() {
    let e3 = this.deserializeBytes();
    return new TextDecoder().decode(e3);
  }
  deserializeBytes() {
    let e3 = this.deserializeUleb128AsU32();
    return new Uint8Array(this.read(e3));
  }
  deserializeFixedBytes(e3) {
    return new Uint8Array(this.read(e3));
  }
  deserializeBool() {
    let e3 = new Uint8Array(this.read(1))[0];
    if (e3 !== 1 && e3 !== 0)
      throw new Error("Invalid boolean value");
    return e3 === 1;
  }
  deserializeU8() {
    return new DataView(this.read(1)).getUint8(0);
  }
  deserializeU16() {
    return new DataView(this.read(2)).getUint16(0, true);
  }
  deserializeU32() {
    return new DataView(this.read(4)).getUint32(0, true);
  }
  deserializeU64() {
    let e3 = this.deserializeU32(), i48 = this.deserializeU32();
    return BigInt(BigInt(i48) << BigInt(32) | BigInt(e3));
  }
  deserializeU128() {
    let e3 = this.deserializeU64(), i48 = this.deserializeU64();
    return BigInt(i48 << BigInt(64) | e3);
  }
  deserializeU256() {
    let e3 = this.deserializeU128(), i48 = this.deserializeU128();
    return BigInt(i48 << BigInt(128) | e3);
  }
  deserializeUleb128AsU32() {
    let e3 = BigInt(0), i48 = 0;
    for (; e3 < U; ) {
      let r23 = this.deserializeU8();
      if (e3 |= BigInt(r23 & 127) << BigInt(i48), !(r23 & 128))
        break;
      i48 += 7;
    }
    if (e3 > U)
      throw new Error("Overflow while parsing uleb128-encoded uint32 value");
    return Number(e3);
  }
  deserialize(e3) {
    return e3.deserialize(this);
  }
  deserializeVector(e3) {
    let i48 = this.deserializeUleb128AsU32(), r23 = new Array();
    for (let s12 = 0; s12 < i48; s12 += 1)
      r23.push(this.deserialize(e3));
    return r23;
  }
};
export {
  m7 as APTOS_BIP44_REGEX,
  A6 as APTOS_COIN,
  d4 as APTOS_HARDENED_REGEX,
  g7 as Account,
  c as AccountAddress,
  n16 as AccountAuthenticator,
  a8 as AccountAuthenticatorEd25519,
  u4 as AccountAuthenticatorMultiEd25519,
  c7 as AccountAuthenticatorMultiKey,
  l6 as AccountAuthenticatorSingleKey,
  c13 as AccountAuthenticatorVariant,
  r20 as AccountSequenceNumber,
  h2 as AddressInvalidReason,
  c6 as AnyPublicKey,
  l11 as AnyPublicKeyVariant,
  s5 as AnySignature,
  _4 as AnySignatureVariant,
  t12 as Aptos,
  s3 as AptosApiError,
  S as AptosApiType,
  i47 as AptosConfig,
  h8 as AuthenticationKey,
  U3 as Bool,
  f8 as CKDPriv,
  r18 as ChainId,
  o4 as DEFAULT_MAX_GAS_AMOUNT,
  n5 as DEFAULT_NETWORK,
  N as DEFAULT_TXN_EXP_SEC_FROM_NOW,
  T4 as DEFAULT_TXN_TIMEOUT_SEC,
  S7 as DeriveScheme,
  n23 as Deserializer,
  v4 as Ed25519PrivateKey,
  l5 as Ed25519PublicKey,
  d5 as Ed25519Signature,
  l9 as EntryFunction,
  t10 as EntryFunctionBytes,
  y6 as FeePayerRawTransaction,
  t7 as FixedBytes,
  g5 as HARDENED_OFFSET,
  i as Hex,
  l as HexInvalidReason,
  r5 as Identifier,
  y4 as KeyType,
  p11 as MimeType,
  o7 as ModuleId,
  M5 as MoveAbility,
  v8 as MoveFunctionVisibility,
  f7 as MoveOption,
  a3 as MoveString,
  t6 as MoveVector,
  p9 as MultiAgentRawTransaction,
  g6 as MultiEd25519PublicKey,
  p7 as MultiEd25519Signature,
  p8 as MultiKey,
  f10 as MultiSig,
  b5 as MultiSigTransactionPayload,
  e2 as Network,
  s10 as NetworkToChainId,
  a11 as NetworkToFaucetAPI,
  n18 as NetworkToIndexerAPI,
  r19 as NetworkToNetworkName,
  o10 as NetworkToNodeAPI,
  s as ParsingError,
  i27 as PrivateKey,
  t2 as ProcessorType,
  a5 as PublicKey,
  a2 as RAW_TRANSACTION_SALT,
  r3 as RAW_TRANSACTION_WITH_DATA_SALT,
  o8 as RawTransaction,
  c9 as RawTransactionWithData,
  h13 as RoleType,
  c10 as RotationProofChallenge,
  U7 as Script,
  g8 as ScriptTransactionArgumentVariants,
  S5 as Secp256k1PrivateKey,
  u3 as Secp256k1PublicKey,
  c5 as Secp256k1Signature,
  B as Serializable,
  n3 as Serializer,
  e as Signature,
  n17 as SignedTransaction,
  m11 as SigningScheme,
  R3 as SigningSchemeInput,
  o5 as StructTag,
  c8 as TransactionAuthenticator,
  d6 as TransactionAuthenticatorEd25519,
  A9 as TransactionAuthenticatorFeePayer,
  l7 as TransactionAuthenticatorMultiAgent,
  u5 as TransactionAuthenticatorMultiEd25519,
  y5 as TransactionAuthenticatorSingleSender,
  d8 as TransactionAuthenticatorVariant,
  a9 as TransactionPayload,
  z2 as TransactionPayloadEntryFunction,
  h9 as TransactionPayloadMultiSig,
  A10 as TransactionPayloadScript,
  y9 as TransactionPayloadVariants,
  x7 as TransactionResponseType,
  u9 as TransactionVariants,
  m9 as TransactionWorker,
  T8 as TransactionWorkerEventsEnum,
  t5 as TypeTag,
  S2 as TypeTagAddress,
  c4 as TypeTagBool,
  h5 as TypeTagGeneric,
  r6 as TypeTagParserError,
  S3 as TypeTagParserErrorType,
  f6 as TypeTagReference,
  U2 as TypeTagSigner,
  b2 as TypeTagStruct,
  z as TypeTagU128,
  d2 as TypeTagU16,
  T6 as TypeTagU256,
  g4 as TypeTagU32,
  p5 as TypeTagU64,
  u2 as TypeTagU8,
  a12 as TypeTagVariants,
  y2 as TypeTagVector,
  B2 as U128,
  b3 as U16,
  v3 as U256,
  y3 as U32,
  m6 as U64,
  p6 as U8,
  E as aptosCoinStructTag,
  T2 as aptosRequest,
  $n as buildTransaction,
  U6 as checkOrConvertArgument,
  a7 as convertArgument,
  A8 as deriveKey,
  tn as deriveTransactionType,
  D4 as deserializeFromScriptArgument,
  A as ensureBoolean,
  P3 as fetchEntryFunctionAbi,
  W as findFirstNonSignerArg,
  dn as generateMultiSignersSignedTransaction,
  un as generateRawTransaction,
  kn as generateSignedTransaction,
  Cn as generateSignedTransactionForSimulation,
  An as generateSigningMessage,
  Wn as generateTransactionPayload,
  sn as generateTransactionPayloadWithABI,
  p2 as get,
  g3 as getAptosFullNode,
  I3 as getAuthenticatorForSimulation,
  L2 as getFunctionParts,
  T7 as isBcsAddress,
  A7 as isBcsBool,
  d3 as isBcsFixedBytes,
  E2 as isBcsString,
  I as isBcsU128,
  S4 as isBcsU16,
  b4 as isBcsU256,
  B3 as isBcsU32,
  U4 as isBcsU64,
  x3 as isBcsU8,
  E5 as isBlockMetadataTransactionResponse,
  M as isBool,
  U10 as isEd25519Signature,
  G4 as isEncodedEntryFunctionArgument,
  W4 as isFeePayerSignature,
  f12 as isGenesisTransactionResponse,
  P as isLargeNumber,
  A12 as isMultiAgentSignature,
  P5 as isMultiEd25519Signature,
  w4 as isNull,
  N4 as isNumber,
  b8 as isPendingTransactionResponse,
  $3 as isScriptDataInput,
  T9 as isSecp256k1Signature,
  C5 as isStateCheckpointTransactionResponse,
  D2 as isString,
  k2 as isUserTransactionResponse,
  D3 as isValidBIP44Path,
  E3 as isValidHardenedPath,
  h6 as mnemonicToSeed,
  G3 as objectStructTag,
  j2 as optionStructTag,
  g as outOfRangeErrorMessage,
  f2 as paginateWithCursor,
  Z as parseTypeTag,
  s4 as post,
  x as postAptosFaucet,
  A3 as postAptosFullNode,
  f3 as postAptosIndexer,
  p10 as promiseFulfilledStatus,
  c3 as request,
  Kn as sign,
  U5 as splitPath,
  Z2 as standardizeTypeTags,
  V as stringStructTag,
  R as throwTypeMismatch,
  w as validateNumberInRange
};
/*! Bundled license information:

@scure/bip39/esm/index.js:
  (*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) *)

@scure/bip32/lib/esm/index.js:
  (*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=@aptos-labs_ts-sdk.js.map
